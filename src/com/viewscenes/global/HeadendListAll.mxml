<?xml version="1.0" encoding="utf-8"?>
<!-- 不区分AB的站点、区分AB的站点、接收机-->
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  width="100%" height="100%" verticalAlign="middle">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:Label text="站点"/>
	<advancedComboBox:AdvancedCombobox xmlns:fx="http://ns.adobe.com/mxml/2009" 
									   xmlns:s="library://ns.adobe.com/flex/spark" 
									   xmlns:mx="library://ns.adobe.com/flex/mx" 
									   creationComplete="init();"
									   change="station_changeHandler()"
									   valueCommit="station_changeHandler()"
									   requireSelection="true" 
									   labelFunction="mylabelFunc"
									   dataProvider="{stationList}"
									   id="headend"
									   width="180"  xmlns:advancedComboBox="com.morcha4.ui.advancedComboBox.*">
	</advancedComboBox:AdvancedCombobox>
	<s:Label text="设备"/>
	<s:DropDownList id="headAB" change="headAB_changeHandler()" dataProvider="{headABArr}"  labelField="label"
					valueCommit="headAB_changeHandler()" requireSelection="true" />
	<s:Label text="接收机" visible="{_showEqu}" includeInLayout="{_showEqu}" id="equLab"/>
	<s:DropDownList id="equType" dataProvider="{equTypeArr}" requireSelection="true" labelField="label"
					width="70" visible="{_showEqu}" includeInLayout="{_showEqu}" />
	<fx:Script>
		<![CDATA[
			import com.morcha4.frame.nav.NavManager;
			import com.morcha4.frame.system.AdvancedEvent;
			import com.morcha4.frame.system.EventBus;
			import com.viewscenes.beans.pub.ResHeadendBean;
			import com.viewscenes.utils.StringTool;
			
			import flash.utils.setTimeout;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.dataGridClasses.DataGridColumn;
			
			import spark.components.ComboBox;
			import spark.events.IndexChangeEvent;
			
			
			public var stationListOra:ArrayCollection ;
			[Bindabel]
			public var stationList:ArrayCollection ;
			[Bindabel] private var _showEqu:Boolean = true ;
			/**
			 * true带全部这项，false只有站点
			 */
			private var _headDataAll:Boolean = false;
			
			var headABArr:ArrayCollection = new ArrayCollection([{label:"全部",value:""}]);
			var equTypeArr:ArrayCollection = new ArrayCollection([{label:"全部",value:""}]);
			
			private function init():void{
				this.setDataProviderNew();
				EventBus.addEventListener(EventDeclare.SYSTEM_INIT_COMPLETED,onInitComplete);
			}
			public function set showEqu(showE:Boolean):void{
				this._showEqu = showE;
				this.equLab.visible = this.equLab.includeInLayout = showE;
				this.equType.visible = this.equType.includeInLayout = showE;
			}
			/**
			 * 取得站点All选择的code
			 */
			public function get getHeadABCode():String{
				return headAB.selectedItem.value;
			}
			/**
			 * 取得接收机选择的值
			 */
			public function get getEquTypeValue():String{
				return equType.selectedItem.value;
			}
			/**
			 * 取得站点选择的code
			 */
			public function get getHeadCode():String{
				return headend.selectedItem.code;
			}
			public function setDataProviderNew():void{
				if(_headDataAll){
					stationList = StringTool.clone(DataManager.headendNoABArr);
					var item:ResHeadendBean = new ResHeadendBean();
					item.shortname = "全部";
					item.code = "";
					item.type_id = "";
					item.version = "";
					stationList.addItemAt(item,0);
					stationListOra = stationList;
				} else{
					stationList = DataManager.headendNoABArr;
					stationListOra = DataManager.headendNoABArr;
				}
				if(headend.textInput){
					headend.dataProvider = stationList;
				}
			}
			public function set headDataAll(type:Boolean):void{
				_headDataAll = type;
				this.setDataProviderNew();
			}
			private function mylabelFunc(item:Object):String{
				if(item == null){
					return "";
				} else{
					return (item.shortname=='全部'?'全部':(item.shortname+'['+item.code+']'+'['+item.state_name+']['+(item.type_id=="101"?"采":"遥")+']'));
				}
			}
			private function onInitComplete(e:Event):void{
				setTimeout(processStation,10);
				//				processStation();
			}
			
			public function processStation():void{
				this.station_changeHandler();
			}
			
			
			protected function station_changeHandler():void
			{
				headABArr = new ArrayCollection([{label:"全部",value:""}]);
				
				if(headend.selectedItem != null){
					if(headend.selectedItem.type_id == "101"){//采集点
						headABArr = new ArrayCollection([{label:"全部",value:""},{label:(headend.selectedItem.shortname),value:(headend.selectedItem.code)}]);
					} else if(headend.selectedItem.type_id == "102"&&headend.selectedItem.version=='V8'){//遥控站
						headABArr = new ArrayCollection([{label:"全部",value:""},
							{label:(headend.selectedItem.shortname+"A"),value:(headend.selectedItem.code+"A")},
							{label:(headend.selectedItem.shortname+"B"),value:(headend.selectedItem.code+"B")},
							{label:(headend.selectedItem.shortname+"C"),value:(headend.selectedItem.code+"C")},
							{label:(headend.selectedItem.shortname+"D"),value:(headend.selectedItem.code+"D")},
							{label:(headend.selectedItem.shortname+"E"),value:(headend.selectedItem.code+"E")},
							{label:(headend.selectedItem.shortname+"F"),value:(headend.selectedItem.code+"F")},
							{label:(headend.selectedItem.shortname+"G"),value:(headend.selectedItem.code+"G")}]);
					}else{
						headABArr = new ArrayCollection([{label:"全部",value:""},{label:(headend.selectedItem.shortname),value:(headend.selectedItem.code)}]);
					}
				}
				
				headAB.dataProvider = headABArr;
				headAB.selectedIndex = 0;
				
				
				EventBus.dispatchEvent(new Event(EventDeclare.STATION_CHANGE,false,false));
				
			}
			
			protected function headAB_changeHandler():void
			{
				
				if(headAB.selectedItem.value == ""){
					equTypeArr = new ArrayCollection([{label:"全部",value:""}]);
				} else{
					if(headend.selectedItem.type_id == "101"){//采集点
						equTypeArr = new ArrayCollection([{label:"全部",value:""},{label:"R1",value:"R1"},{label:"R2",value:"R2"}]);
					} else if(headend.selectedItem.type_id == "102"){//遥控站
						var nn:String = (headAB.selectedItem.value as String);
						if(nn.lastIndexOf("A")==(nn.length-1)){//A
							equTypeArr = new ArrayCollection([{label:"全部",value:""},{label:"R1",value:"R1"}]);
						} else if(nn.lastIndexOf("B")==(nn.length-1)){//B
							equTypeArr = new ArrayCollection([{label:"全部",value:""},{label:"R1",value:"R1"},{label:"R2",value:"R2"}]);
						}
					}
				}
				equType.dataProvider = equTypeArr;
			}
			
			
			
			private function doFilter(item:Object):Boolean{
				var locName:String = item.locationName;
				var stName:String = item.stationName;
				var pinyinLabel:String = item.pinyinLabel;
				
				var t:String = headend.textInput.text.toLowerCase();
				
				if((locName.toLowerCase().indexOf(t))>-1 || (stName.indexOf(t))>-1 || pinyinLabel.indexOf(t)>-1){
					return true;
				}else{
					return false;
				}
				
			}
			
			/**
			 * 根据条件设置不同的数据
			 * type:  类型##值  如：type_id##101 state##1
			 * isAll: 是否含有全部这一项
			 */
			public function setDataProvider(type:String,isAll:Boolean=false):void{
				var list:ArrayCollection = new ArrayCollection();
				for(var i=0;i<stationListOra.length;i++){
					if((stationListOra.getItemAt(i) as ResHeadendBean)[type.split("##")[0]] == type.split("##")[1]){
						list.addItem(stationListOra.getItemAt(i));
					}
				}
				if(isAll){
					var allHead:ResHeadendBean = new ResHeadendBean();
					allHead.shortname = "全部";
					list.addItemAt(allHead,0);
				}
				headend.dataProvider = list;
			}
			
		]]>
	</fx:Script>
</s:HGroup>
