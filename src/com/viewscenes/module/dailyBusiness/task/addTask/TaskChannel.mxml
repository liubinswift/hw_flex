<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:task="com.viewscenes.module.dailyBusiness.task.*"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%"
		 height="100%"
		 xmlns:timecomp="com.viewscenes.utils.timecomp.*"
		 xmlns:addTask="com.viewscenes.module.dailyBusiness.task.addTask.*" 
		 xmlns:advancedComboBox="com.morcha4.ui.advancedComboBox.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.viewscenes.global.DataManager;
			
			import mx.collections.ArrayCollection;
			[Bindable]
			public var runplan_id:String="";
			/**
			 * type:独立时间(stand)/循环时间(loop)
			 */
			[Bindable]
			public var task_type:String="GeneralTask";


			[Bindable]
			public var equColl:ArrayCollection=new ArrayCollection([{label: "自动选择", data: ""}, {label: "R1", data: "R1"}, {label: "R2", data: "R2"}]);

			[Bindabel]
			public var isTempTask:Boolean=true; //true临时任务,false运行图任务
			[Bindabel]
			public var includeRecordTask:Boolean=true; //true包含录音任务,false不包含录音任务
			public var myParent:Object=null;

			private function init():void
			{
			}

			private var idNum:int=1;

			//type:独立时间(stand)/循环时间(loop)
			public function addChildtoVBox(type:String):Object
			{

				if (type == "stand")
				{
					var singleObj:SingleTime=new SingleTime();
					singleObj.task_type=task_type;
					singleObj.myParent=this;
					singleObj.id="stand" + idNum;
					idNum++;
					SingleContainer.addElement(singleObj);
					SingleContainer.includeInLayout=true;
					SingleContainer.visible=true;
					return singleObj;
				}
				else
				{
					var loopObj:LoopTime=new LoopTime();
					loopObj.task_type=task_type;
					loopObj.isTempTask=isTempTask;
					loopObj.myParent=this;
					loopObj.id="loop" + idNum;
					idNum++;
					LoopContainer.addElement(loopObj);
					loopObj.deleteLoop.visible=isTempTask;
					LoopContainer.includeInLayout=true;
					LoopContainer.visible=true;
					return loopObj;
				}


			}


			/**
			 * type:loop循环，stand独立
			 */
			public function removeTaskChild(type:String, delId:String):void
			{
				if (type == "loop")
				{
					for (var i:int=0; i < LoopContainer.numElements; i++)
					{
						if (delId == (LoopContainer.getElementAt(i) as LoopTime).id)
						{
							LoopContainer.removeElementAt(i);
						}
					}
				}
				else
				{
					for (var i:int=0; i < SingleContainer.numElements; i++)
					{
						if (delId == (SingleContainer.getElementAt(i) as SingleTime).id)
						{
							SingleContainer.removeElementAt(i);
						}
					}
				}
			}

			public function delChannel():void
			{
				this.myParent.removeTaskChild(this);
			}





			//清除所有类型的子任务（循环、独立）
			public function clearAllSubTask():void
			{
				LoopContainer.includeInLayout=false;
				LoopContainer.removeAllElements();
				SingleContainer.includeInLayout=false;
				SingleContainer.removeAllElements();
			}

			public function setBps(bp:String):void
			{
				if (bp == null || bp == "")
					return;
				for (var i:int=0; this._bps.dataProvider.length; i++)
				{
					if (this._bps.dataProvider[i].data == bp)
					{
						this._bps.selectedIndex=i;
						break;
					}
				}
			}

			private function visableMy():void
			{
				this.height == 40 ? this.percentHeight=100 : this.height=40;
				
			}
		]]>
	</fx:Script>

	<s:VGroup width="100%"
			  horizontalAlign="left"
			  verticalAlign="top"
			  bottom="5"
			  top="0"
			  id="content"
			  height="100%">
		<s:HGroup width="100%"
				  horizontalAlign="left"
				  verticalAlign="middle" 
				  paddingLeft="20">
			<s:HGroup id="qualityBox" visible="false"
					  verticalAlign="middle" height="100%"
					  paddingRight="0">
				<s:CheckBox label="电平"
							id="level"
							selected="true"/>
				<s:CheckBox label="调幅度"
							id="am_mod"
							selected="false"/>
				<s:CheckBox label="调制度"
							id="fm_mod"
							selected="false"/>
				<s:CheckBox label="带宽"
							selected="true"
							id="bandwidth"/>
				<s:CheckBox label="质量录音是否报警"
							selected="true"
							id="qualityRecordAlarm"
							visible="false"
							includeInLayout="false"/>
			</s:HGroup>
			<s:Label text="接收机："/>
			<advancedComboBox:DropDownListSet id="_equ_code"
							dataProvider="{DataManager.taskHeadenEqu}"
							selectedIndex="0">
			</advancedComboBox:DropDownListSet>
			<s:HGroup verticalAlign="middle" id="validGroupChannel" visible="false" includeInLayout="false">
				<s:Label text="有效期从："/>
				<timecomp:TimeNew id="valid_startdatetime"/>
				<s:Label text="到"/>
				<timecomp:TimeNew id="valid_enddatetime"/>
				<s:Spacer width="10"/>
			</s:HGroup>
		</s:HGroup>
		<s:HGroup id="channelHgroup"
				  width="100%"
				  height="40"
				  horizontalAlign="left"
				  verticalAlign="middle"
				  paddingLeft="20">
			<s:Label text="频        率："/>
			<s:TextInput width="80"
						 id="_freq"
						 restrict="0-9"
						 maxChars="6"/>
			<s:Label text="(KHZ)"/>
			<s:Spacer width="20"/>


			<s:HGroup id="bpsHBox"
					  visible="{includeRecordTask}"
					  includeInLayout="{includeRecordTask}"
					  verticalAlign="middle"
					  paddingRight="20">
				<s:Label text="录音文件长度："/>
				<timecomp:TimeNew id="recordlength"
								  dateDisplay="time"
								  text="00:01:00"/>
				<s:Spacer width="26"/>
				<s:Label text="码率："/>
				<advancedComboBox:DropDownListSet id="_bps"
								dataProvider="{DataManager.bpsColl}"
								selectedIndex="0"
								width="75"/>
				<s:Spacer width="26"/>
				<s:Label text="录音任务收测间隔(秒)："/>
				<timecomp:TimeNew id="stream_sleeptime"
								  dateDisplay="time"
								  text="00:00:00"/>
				<s:Label text="发射台:"/>
				<advancedComboBox:DropDownListSet id="station"
								labelField="name" dataProvider="{DataManager.stationBeanAll}"
								selectedIndex="0"/>
				<s:Label text="语言:"/>
				<advancedComboBox:DropDownListSet id="language"
								labelField="language_name" dataProvider="{DataManager.languageBeanAll}"
								selectedIndex="0"/>
			</s:HGroup>

		</s:HGroup>
		<s:VGroup id="LoopContainer"
				  width="100%"
				  verticalAlign="middle"
				  horizontalAlign="center">
			<!--addTask:LoopTime task_type="{task_type}" id="looptime" isTempTask="{isTempTask}"/-->
		</s:VGroup>
		<s:VGroup id="SingleContainer"
				  width="100%"
				  verticalAlign="middle"
				  horizontalAlign="center">

		</s:VGroup>

		<mx:HRule strokeWidth="1"
				  strokeColor="#a0a0a0"
				  shadowColor="#000000"
				  width="100%"/>
	</s:VGroup>
	<s:HGroup width="100%"
			  verticalAlign="middle"
			  top="0"
			  gap="15" paddingLeft="600"
			  visible="{isTempTask}"
			  id="addGroup">
		<s:Button buttonMode="true" label="[添加循环时间]"
				  id="addLoop"
				  click="addChildtoVBox('loop');"/>
		<s:Button buttonMode="true" label="[添加独立时间]"
				  id="addSingle"
				  click="addChildtoVBox('stand');"/>
		<s:Button buttonMode="true" id="_delechannel"
				  label="删除"
				  click="delChannel();"/>
	</s:HGroup>
</s:Group>
