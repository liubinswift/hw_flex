<?xml version="1.0" encoding="utf-8"?>
<system:BasePage xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:system="com.morcha4.frame.system.*" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		  creationComplete="init()" 
		  xmlns:contaners="com.morcha4.ui.contaners.*" 
		  xmlns:ns="com.viewscenes.module.systemTopology.map_navigate.*" 
		  xmlns:embed="com.viewscenes.utils.embed.*" 
		  xmlns:layout="com.morcha4.ui.contaners.layout.*" xmlns:maps="com.google.maps.*">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import caurina.transitions.Tweener;
			import caurina.transitions.properties.CurveModifiers;
			
			import com.google.maps.LatLng;
			import com.google.maps.MapMouseEvent;
			import com.google.maps.MapType;
			//import com.google.maps.MapTypeOptions;
			//import com.google.maps.controls.ControlPosition;
			import com.google.maps.controls.MapTypeControl;
			//import com.google.maps.controls.PositionControl;
			//import com.google.maps.controls.ZoomControl;
			import com.google.maps.overlays.Marker;
			import com.google.maps.overlays.MarkerOptions;
			import com.morcha4.RPC.RPCManager;
			import com.morcha4.RPC.request.RORequestParam;
			import com.morcha4.frame.nav.NavManager;
			import com.morcha4.frame.nav.NavParam;
			import com.morcha4.frame.system.AdvancedEvent;
			import com.viewscenes.beans.pub.ResHeadendBean;
			import com.viewscenes.global.DataManager;
			import com.viewscenes.global.comp.MM;
			import com.viewscenes.module.dailyBusiness.alarmHandler.SeeEquForm;
			import com.viewscenes.module.dailyBusiness.alarmHandler.SeeQualityForm;
			//import com.viewscenes.module.onlineBusiness.onlineListen.Mark;
			import com.viewscenes.utils.timecomp.DateUtil;
			
			import mx.collections.ArrayCollection;
			//import mx.controls.Alert;
			import mx.managers.PopUpManager;
			//import mx.utils.object_proxy;
			
			import org.papervision3d.cameras.Camera3D;
			import org.papervision3d.events.InteractiveScene3DEvent;
			import org.papervision3d.materials.MovieAssetMaterial;
			import org.papervision3d.materials.utils.PrecisionMode;
			import org.papervision3d.objects.DisplayObject3D;
			import org.papervision3d.objects.primitives.Sphere;
			import org.papervision3d.render.BasicRenderEngine;
			import org.papervision3d.scenes.Scene3D;
			import org.papervision3d.view.Viewport3D;
			
			import spark.events.IndexChangeEvent;
			
			
			private var scene:Scene3D;
			private var viewport:Viewport3D;
			private var camera:Camera3D;
			private var renderEngine:BasicRenderEngine;
			private var sphere:Sphere;
			
			private var radius:Number =130 ;	//地球半径
			
			private var material:MovieAssetMaterial = null;
			private var myEarth:earth;
			private var earthMC:MovieClip;
			private function init():void{
				
				getQualityAlarm();
				showEarth();
				alarmStatus();
			}
			
			
			
			/*************************地球业务开始***************************/
			
			private function showEarth():void{
				myEarth = new earth();
				
				var obj3d:DisplayObject3D = new DisplayObject3D();
				obj3d.name = "pv3dEarth";
				material = new MovieAssetMaterial("earth",true,true,false,true);
				material.doubleSided = true;
				material.smooth = true;
				material.precisionMode = PrecisionMode.STABLE;//是定义精度模式来避免摇晃闪烁效果
				material.animated = true;
				material.precise = true;
				material.interactive = true;
				
				earthMC = MovieClip(material.movie);
				 
				refreshEarth();
//				//注册事件
				addHeadendEvent();
				
				addContinentEvent();
				
				
				
				
				scene = new Scene3D();
				camera = new Camera3D();
			    
			
				sphere = new Sphere(material, radius,40,40);
				
				
				sphere.rotationX = 0;
				sphere.rotationY = 0;
				sphere.rotationZ = 0;
				
				scene.addChild(obj3d);
				obj3d.addChild(sphere);
				
				viewport = new Viewport3D();
				viewport.interactive = true;
				bc.rawChildren.addChild(viewport);
				
				//球体位置
				viewport.x=-20;
				viewport.y=-30;
				viewport.z=-160;
				viewport.buttonMode = true;
				
				renderEngine = new BasicRenderEngine();
				renderEngine.renderScene(scene,camera,viewport);
				
				addEventListener(Event.ENTER_FRAME, render);
				
				sphere.addEventListener(InteractiveScene3DEvent.OBJECT_CLICK, earthClick);				
				sphere.addEventListener(InteractiveScene3DEvent.OBJECT_PRESS, earthPress);
				sphere.addEventListener(InteractiveScene3DEvent.OBJECT_RELEASE, earthRelease1);
				addEventListener(MouseEvent.MOUSE_UP, earthRelease2);
				
				this.callLater(setRate);
				camera.x = 0;
				camera.y = 130;
				camera.z = -600;
				
				CurveModifiers.init();
				startAnimation();
			}
			[Bindable]
			private var begin:int = 0;
			[Bindable]
			private var end:int = 0;
			
			[Bindable]
			private var result:int = 0;
			
			[Bindable]
			private var ballObject3D:DisplayObject3D;
			
			private function earthStop(e:Event):void{
				this.removeEventListener(Event.ENTER_FRAME,render);
			}
			
			private function earthStart(e:Event):void{
				addEventListener(Event.ENTER_FRAME, render);
			} 
			
			private function earthPress(e:InteractiveScene3DEvent):void{
				ballObject3D = e.displayObject3D;
				begin = bc.mouseX;
				
			} 
			private function earthRelease1(e:InteractiveScene3DEvent):void{
				effect(e.displayObject3D);
			} 
			
			
			
			
			
			
			
			
			private function earthRelease2(e:Event):void{
				end = bc.mouseX;
				if (ballObject3D!= null)
					effect(ballObject3D);
			}
			
			
			
			private function earthClick(e:InteractiveScene3DEvent):void
			{
				
			}
			
			private function render(e:Event):void
			{
				sphere.yaw( .5 );
				sphere.localRotationX =20;
				sphere.localRotationY +=1;
				renderEngine.renderScene(scene, camera, viewport);
			}
			private function setRate():void{
				if (this.parentApplication!=null)
				{
					this.parentApplication.frameRate = 40;
				}
				
			}
			
			
			//开始动画
			private function startAnimation():void
			{
				//此处添加代码
				if (!Tweener.isTweening(camera)){
					Tweener.addTween(camera,{
						x:0,
						y:0,
						z:-300,
						_bezier:{ x:10, y:0,z:4},
						time:3,
						transition:"easeInOutQuad",
						onComplete:setPointOfView,
						onCompleteParams:["red"]
					});
				}
				
			}
			
			private function setPointOfView(view:String):void
			{
			}
			
			
			
			
			//鼠标控制地球转动效果
			private function effect(displayObject3D:DisplayObject3D):void{
				
				if (!Tweener.isTweening(displayObject3D))
				{
					
					var direction:int = 50;
					end = bc.mouseX;
					//有可能是点击事件
					if (Math.abs(begin-end)<10 || begin == 0)
						return;
					
					
					result = begin-end;
					if ((result) >0)
						direction = -50;
					else 
						direction = 50;
					//滑动距离比较远，让地球也转快点
					if (result>300)
						direction = -120;
					else if (result < -300)		
						direction = 120;
					
					var tweenObject:DisplayObject3D = displayObject3D;
					Tweener.addTween(tweenObject,{
						localRotationY:tweenObject.localRotationY + direction,
						time:.5
					});
					
					
					//初始化鼠标值
					begin = 0;
					end = 0;
				}
				
			}
			
			
			//加载地图上的点
			private function loadMapPoint(_myEarth:earth):earth{
				var obj:Object = new Object;
				var sites:Array = new Array;
				var ss:int = 0;
				for(var i:int = 0;i<DataManager.headendNoABArr.length;i++){
					var headendBean:ResHeadendBean = DataManager.headendNoABArr[i] as ResHeadendBean;
					if (headendBean.x == "" || headendBean.y == "" || headendBean.state == "")
						continue;
					
					var site:Object = new Object;
					site.x = headendBean.x.split(",")[0];
					site.y = headendBean.y.split(",")[0];
					
					if (site.y == "" || site.x == "")
						continue;
					
					site.code = headendBean.code;
					site.headname = headendBean.shortname_noab;
					
					if (headendBean.type_id == '102'){
						
						var _bean1:ResHeadendBean = DataManager.getHeadendByCode(headendBean.code+"A");
						var _bean2:ResHeadendBean = DataManager.getHeadendByCode(headendBean.code+"B");
						var _bean3:ResHeadendBean = DataManager.getHeadendByCode(headendBean.code+"C");
						var _s1:String = "";
						var _s2:String = "";
						var _s3:String = "";
						if (_bean1 !=null){
							_s1 = _bean1.site_status;
						}
						if (_bean2 !=null){
							_s2 = _bean2.site_status;
						}
						if(_bean3 !=null){
							_s3 = _bean3.site_status;
						}
						var s:String=_s1>_s2?_s1:_s2;
						s=s>_s3?s:_s3;
						site.alarmType = s;
					}else{
						site.alarmType = DataManager.getHeadendByCode(headendBean.code).site_status;
					}
					sites[ss++] = site;
				}
				
				obj.sites = sites;
				var arr:Array = _myEarth.loadTips(obj);
				
				return _myEarth;
			}
			
			/**
			 * 为站点注册事件
			 */ 
			private function addHeadendEvent():void{
				for(var i:int = 0;i<DataManager.headendNoABArr.length;i++){
					var headendBean:ResHeadendBean = DataManager.headendNoABArr[i] as ResHeadendBean;
					if (headendBean.x.split(",")[0] == "" || headendBean.y.split(",")[0] == "" || headendBean.state == "")
						continue;
					earthMC.getChildByName(headendBean.code).addEventListener(MouseEvent.CLICK,mapEvent);
					earthMC.getChildByName(headendBean.code).addEventListener(MouseEvent.MOUSE_OVER,mapEvent);
					earthMC.getChildByName(headendBean.code).addEventListener(MouseEvent.MOUSE_OUT,mapEvent);
					
				}
			}
			
			/**
			 * 为大洲注册事件
			 */ 
			private function addContinentEvent():void{
				earthMC.getChildByName('asian').addEventListener(MouseEvent.CLICK,mapEvent);
				earthMC.getChildByName('europe').addEventListener(MouseEvent.CLICK,mapEvent);
				earthMC.getChildByName('africa').addEventListener(MouseEvent.CLICK,mapEvent);
				earthMC.getChildByName('north_america').addEventListener(MouseEvent.CLICK,mapEvent);
				earthMC.getChildByName('south_america').addEventListener(MouseEvent.CLICK,mapEvent);
				earthMC.getChildByName('australia').addEventListener(MouseEvent.CLICK,mapEvent);
				//earthMC.getChildByName('world').addEventListener(MouseEvent.CLICK,mapEvent);
				
				earthMC.getChildByName('asian').addEventListener(MouseEvent.MOUSE_OVER,mapEvent);
				earthMC.getChildByName('europe').addEventListener(MouseEvent.MOUSE_OVER,mapEvent);
				earthMC.getChildByName('africa').addEventListener(MouseEvent.MOUSE_OVER,mapEvent);
				earthMC.getChildByName('north_america').addEventListener(MouseEvent.MOUSE_OVER,mapEvent);
				earthMC.getChildByName('south_america').addEventListener(MouseEvent.MOUSE_OVER,mapEvent);
				earthMC.getChildByName('australia').addEventListener(MouseEvent.MOUSE_OVER,mapEvent);
				//earthMC.getChildByName('world').addEventListener(MouseEvent.MOUSE_OVER,mapEvent);
				
				earthMC.getChildByName('asian').addEventListener(MouseEvent.MOUSE_OUT,mapEvent);
				earthMC.getChildByName('europe').addEventListener(MouseEvent.MOUSE_OUT,mapEvent);
				earthMC.getChildByName('africa').addEventListener(MouseEvent.MOUSE_OUT,mapEvent);
				earthMC.getChildByName('north_america').addEventListener(MouseEvent.MOUSE_OUT,mapEvent);
				earthMC.getChildByName('south_america').addEventListener(MouseEvent.MOUSE_OUT,mapEvent);
				earthMC.getChildByName('australia').addEventListener(MouseEvent.MOUSE_OUT,mapEvent);
				
			}
			
			
			private var tip:tipPan;
			/**
			 * 点击站点弹出站点信息和导航按钮
			 * */
			private function showTip(e:MouseEvent):void{
				
				var p:MyPoint2 = e.currentTarget as MyPoint2;
				
				tip = tipPan(PopUpManager.createPopUp(this,tipPan,false));
				
				tip.title = p.headname;

				var bean:ResHeadendBean = DataManager.getHeadendByCode(p.name);
				var beana:ResHeadendBean = DataManager.getHeadendByCode(p.name+"A");
				var beanb:ResHeadendBean = DataManager.getHeadendByCode(p.name+"B");
				
				if (bean != null){
					
					tip.qualitySite = (bean.site_status== "1"?bean.code:"无");
					tip.deviceSite = (bean.site_status== "2"?bean.code:"无");
				}else{
					var q:String = "";
					if (beana.site_status == "1")
						q = beana.code;
					
					var d:String = "";
					if (beana.site_status == "2")
						d = beana.code;
					
					tip.qualitySite = q ==""?"无":q;
					tip.deviceSite = d==""?"无":d;
				}
				
				
				
				PopUpManager.centerPopUp(tip);
				tip.setFocus();
				tip.x=600;
				tip.y=100;
			}
			
			/**
			 * 地图的点击、滑过、滑入处理方法
			 * 点击地图上的点或大洲都弹出大洲的地图
			 *
			 */ 
			private function mapEvent(e:MouseEvent):void{
				
				var mc:MovieClip;
				mc = e.currentTarget as MovieClip;
				
				
				//弹出洲的影片剪辑
				var winMc:MovieClip;
				if (e.type == "mouseOver"){
					
					if (e.currentTarget is MyPoint2){
						earthStop(e);
						showTip(e);
					}else{
						//出现轮廓
						mc.gotoAndStop(2);
					}
					
				}else if (e.type == "mouseOut"){
					
					if (e.currentTarget is MyPoint2){
						earthStart(e);
						PopUpManager.removePopUp(tip);
					}else{
						//消失轮廓
						mc.gotoAndStop(1);
					}
				}else if (e.type == "click"){
					
					if (e.currentTarget is MyPoint2){
						var p:MyPoint2 = e.currentTarget as MyPoint2;
						var b:ResHeadendBean = null;
						var bean:ResHeadendBean = DataManager.getHeadendByCode(p.name);
						
						var beana:ResHeadendBean = DataManager.getHeadendByCode(p.name+"A");
						
						if (bean != null)
							b = bean;
						else
							b = beana;
						
						switch (int(b.state)){
							case 0:winMc = new Asian_map;winMc.name= "亚洲";
								map.setCenter(new LatLng(23.09656,113.19219), 3);break;
							case 1:winMc = new Europe_map;winMc.name= "欧洲";
								map.setCenter(new LatLng(50.79,16.28), 3);break;
							case 2:winMc = new Africa_map;winMc.name= "非洲";
								map.setCenter(new LatLng(3.26,19.77), 3);break;
							case 3:winMc = new NorthAmerica_map;winMc.name= "北美洲"; 
								map.setCenter(new LatLng(44.99,-93.26),3);
								break;
							case 4:winMc = new SouthAmerica_map;winMc.name= "南美洲";
								map.setCenter(new LatLng(-19.00,-57.65), 3);break;
							case 5:winMc = new Australia_map;winMc.name= "大洋洲";
								map.setCenter(new LatLng(-27.53,135.44), 3);break;
                            
						}
						
					}else if (mc.name.indexOf("instance") == -1){
						if (mc.name == "north_america"){
							map.setCenter(new LatLng(44.99,-93.26),3);
						}else if (mc.name == "europe"){
							map.setCenter(new LatLng(50.79,16.28), 3);
						}else if (mc.name == "asian"){
							map.setCenter(new LatLng(23.09656,113.19219), 3);
						}else if (mc.name == "south_america"){
							map.setCenter(new LatLng(-19.00,-57.65), 3);
						}else if (mc.name == "africa"){
							map.setCenter(new LatLng(3.26,19.77), 3);
						}else if (mc.name == "australia"){
							map.setCenter(new LatLng(-27.53,135.44), 3);
						}
					}
					world.visible=false;
					world.includeInLayout=false;
					mm.includeInLayout=true;
					mm.visible=true;
				}
				
			}
			
			private var earth_time:uint ;
			/**
			 *刷新地球报警状态
			 */ 
			private function refreshEarth():void{
				earth_time=setTimeout(refreshEarth,30000);
				loadMapPoint(earthMC as earth);

			}
			/*************************地球业务结束***************************/
			
			[Bindable]
			private var ykz_count:Number = 0;//遥控站统计
			[Bindable]
			private var cjd_count:Number = 0;//采集点统计
			[Bindable]
			private var online_count:Number = 0;//在线统计
			[Bindable]
			private var device_alarm_count:Number = 0;//设备报警统计
			[Bindable]
			private var quality_alarm_count:Number = 0;//指标报警统计
			[Bindable]
			private var double_alarm_count:Number = 0;//双报警
			private var time:uint;	//刷新地图ID
			private var statusTime:uint;//刷新统计信息ID
			[Bindable]
			private var btns:ArrayCollection=new ArrayCollection([{label:"在线监听",url:"/在线业务/在线监听/在线监听",id:"200101"},{label:"设备控制",url:"/在线业务/设备控制/设备控制",id:"200801"},{label:"实时监测",url:"/在线业务/实时监测/站点状态",id:"200201"},{label:"参数设置",url:"/在线业务/参数设置/设备初始化参数设置",id:"200701"},{label:"任务管理",url:"/日常业务/任务管理/任务查询",id:"100101"},{label:"录音查询",url:"/日常业务/数据查询/录音文件数据查询",id:"100302"},{label:"报警查询",url:"/日常业务/报警查询处理/报警查询处理",id:"1004"},{label:"设备日志",url:"/日常业务/设备日志查询/设置日志查询",id:"1005"}]);
			
			private function itemClick(event:IndexChangeEvent):void{
				if (event.target.selectedItem.id == "qualityContent"){
					vs.selectedIndex = 0;
					getQualityAlarm();
				}else{
					vs.selectedIndex = 1;
					getDeviceAlarm();
				}
				
			}
			
			/**
			 *指标报警查询 
			 */
			private function getQualityAlarm():void{
				
				var obj:Object = new Object;
				obj.headendcode = "";
				obj.codeAB = "";
				obj.receive = "";
				obj.state = "100";
				obj.starttime = DateUtil.date2str(new Date,"date")+" 00:00:00";//"2012-01-01 00:00:00";
				obj.enddate = DateUtil.date2str(new Date,"date")+" 23:59:59";
				obj.isresumed = "";
				obj.ishandled = "";
				obj.alerttab = "quality";
				obj.qtype = "";
				obj.etype = "";
				obj.startRow = 0;
				obj.endRow = 1000;
				RPCManager.sendCmd(new RORequestParam("com.viewscenes.web.daily.alarmHandler.AlertManage","getAlert_ManageList",
					obj,getQualityAlarmBack,DataManager.showErrorMessageBack));
			}
			
			/**
			 *设备报警查询 
			 */
			private function getDeviceAlarm():void{
				var obj:Object = new Object;
				obj.headendcode = "";
				obj.codeAB = "";
				obj.receive = "";
				obj.state = "100";
				obj.starttime = DateUtil.date2str(new Date,"date")+" 00:00:00";//"2012-01-01 00:00:00";
				obj.enddate = DateUtil.date2str(new Date,"date")+" 23:59:59";
				obj.isresumed = "";
				obj.ishandled = "";
				obj.alerttab = "equ";
				obj.qtype = "";
				obj.etype = "";
				obj.startRow = 0;
				obj.endRow = 1000;
				RPCManager.sendCmd(new RORequestParam("com.viewscenes.web.daily.alarmHandler.AlertManage","getAlert_ManageList",
					obj,getQualityAlarmBack,DataManager.showErrorMessageBack));
			}
			
			
			private function getQualityAlarmBack(resultObj:Object):void{
				var list:ArrayCollection = resultObj.resultList;
				if (vs.selectedIndex == 0)
					quality.removeAllElements();
				else
					device.removeAllElements();
				
				
				if (list.length == 0 ){
					var lab:Label = new Label();
					lab.text = "无报警数据";
					
					if (vs.selectedIndex == 0){
						quality.addElement(lab);
					}else{
						device.addElement(lab);
					}
						
						
				}
				
				for(var i:int=0;i<list.length;i++){
					var o:Object = list.getItemAt(i);  
					var s:MsgLabel = new MsgLabel();
					s.data = o ;
					s.content = o.shortname+'('+o.head_code+')'+'  '+ o.ip;
					if (vs.selectedIndex == 0){
						quality.addElement(s);
						s.f = qualityClick;
					}else{
						s.f = deviceClick;
						device.addElement(s);
					}
					s.handle = (o.is_resume == "0"?false:true);
				}
			}
			
			/**
			 * 查看指标报警 
			 */ 
			private function qualityClick(obj:Object):void{
				var popo:SeeQualityForm = SeeQualityForm(PopUpManager.createPopUp(this,SeeQualityForm,true));
				popo.setQuality(obj);
				
				PopUpManager.centerPopUp(popo);
			
				popo.addEventListener("Quality_list_refresh",getQualityAlarm);
			}
			
			
			private function deviceClick(obj:Object):void{
				
				var popo:SeeEquForm = SeeEquForm(PopUpManager.createPopUp(this,SeeEquForm,true));
				
				popo.SeeEqu(obj);
				
				PopUpManager.centerPopUp(popo);
				popo.addEventListener("Equ_list_refresh",getDeviceAlarm);
			}
			
			
			/**
			 * 点击按钮导航到指定的功能模块
			 * */
			private function onNavClick(e:MouseEvent):void{
				NavManager.getInstance().dispatchEvent(new AdvancedEvent(NavManager.MODULE_NAV,false,false,new NavParam(null,e.currentTarget.getRepeaterItem().url,null)));
			}
			
			
			/**
			 * 选择站点
			 */ 
			private function changeSite(event:Event):void{
				Tweener.addTween(sphere,{
					localRotationY:1,
					time:.5
				});
			}
			
			/**
			 *站点统计信息 
			 */
			private function alarmStatus():void{
				cjd_count = 0;
				ykz_count = 0;
				online_count = 0;
				device_alarm_count = 0;
				quality_alarm_count = 0;
				double_alarm_count = 0;
				for(var i:int = 0;i<DataManager.headendBeanArr.length;i++){
					var headend:ResHeadendBean  = DataManager.headendBeanArr.getItemAt(i) as ResHeadendBean;
					//采集点
					if (headend.type_id == '101'){
						cjd_count++;
					}else{
						ykz_count++;
					}
					
					if (headend.is_online == '1')
						online_count++;
					
					if (headend.site_status == '1'){
						device_alarm_count++;
					}else if (headend.site_status == '2'){
						quality_alarm_count++;
					}else if (headend.site_status == '3'){
						double_alarm_count++;
					}
				}
				statusTime=setTimeout(alarmStatus,30000);
			}
			private function onMapReady(event:Event):void {                   
				map.removeMapType(MapType.HYBRID_MAP_TYPE);
				map.removeMapType(MapType.PHYSICAL_MAP_TYPE);
				map.removeMapType(MapType.SATELLITE_MAP_TYPE);
				map.addControl(new MapTypeControl());
				
				map.setDoubleClickMode(0);
				
				map.setCenter(new LatLng(26.5,-17.5), 3);
				
				refreshMapMark();
				
			}
			
		private function zoomIn():void{
			
			if(map.getZoom()==5){
				return ;
			}
			map.zoomIn();
		}
		private function zoomOut():void{
			if(map.getZoom()==2){
				return ;
			}
			map.zoomOut();
		}
			private function zoomReturn():void{
				world.visible=true;
				world.includeInLayout=true;
				mm.includeInLayout=true;
				mm.visible=false;
			}
		
			private function doubleClick(e:MapMouseEvent):void {
				var obj:Object=e.currentTarget
			}
			private function markerManage(marker:Marker):void{
				
				MM.show("ON click");
			}
			public function addMarkToMap(marker:Marker):void{
				marker.addEventListener(MapMouseEvent.DOUBLE_CLICK,doubleClick)
				map.addOverlay(marker);
				map.setCenter(marker.getLatLng());
			}
			private function removeAllMark():void{
				map.clearOverlays();
			}
			private function refreshMapMark():void{
				earth_time=setTimeout(refreshMapMark,30000);
				addMapPoint()
			}
			
			private function addMapPoint():void{	
				map.clearOverlays();
				var beanIp:String="";
				var country:String="";
				for(var i:int = 0;i<DataManager.headendNoABArr.length;i++){
					
					var headendBean:ResHeadendBean = DataManager.headendNoABArr[i] as ResHeadendBean;
					if (headendBean.longitude == "" || headendBean.latitude == "" || headendBean.state == "")
						continue;
					var site:Object = new Object();
					site.x =toNumber(headendBean.longitude)	;
					site.y = toNumber(headendBean.latitude);	
					if (site.y == "" || site.x == "")
						continue;
					var marker:Marker=new Marker(new LatLng(site.y,site.x));
					var option:MarkerOptions=marker.getOptions();
					beanIp=headendBean.ip;
					country=headendBean.country;
					var quality_alarm:String="";
					var device_alarm:String="";
					if (headendBean.type_id == '102'){
						var _bean1:ResHeadendBean = DataManager.getHeadendByCode(headendBean.code+"A");
						var _bean2:ResHeadendBean = DataManager.getHeadendByCode(headendBean.code+"B");
						var _bean3:ResHeadendBean = DataManager.getHeadendByCode(headendBean.code+"C");
						var _s1:String = "";
						var _s2:String = "";
						var _s3:String = "";
						if (_bean1 !=null){
							_s1 = _bean1.site_status;
							if(_s1=="1"){
								quality_alarm=_bean1.code;	
							}else if(_s1=="2"){
								device_alarm=_bean1.code;
							}else if(_s1=="3"){
								quality_alarm=_bean1.code;
								device_alarm=_bean1.code;
							}
						}
						if (_bean2 !=null){
							_s2 = _bean2.site_status;
							if(_s2=="1"){
								if(quality_alarm==""){
									quality_alarm=_bean2.code;
								}else{
									quality_alarm+=","+_bean2.code;
								}
							}else if(_s2=="2"){
								if(device_alarm==""){
									device_alarm=_bean2.code;
								}else{
									device_alarm+=","+_bean2.code;
								}
							}else if(_s2=="3"){
								if(quality_alarm==""){
									quality_alarm=_bean2.code;
								}else{
									quality_alarm+=","+_bean2.code;
								}
								if(device_alarm==""){
									device_alarm=_bean2.code;
								}else{
									device_alarm+=","+_bean2.code;
								}
							}
						}
						if (_bean3 !=null){
							_s3 = _bean3.site_status;
							if(_s3=="1"){
								if(quality_alarm==""){
									quality_alarm=_bean3.code;
								}else{
									quality_alarm+=","+_bean3.code;
								}
							}else if(_s3=="2"){
								if(device_alarm==""){
									device_alarm=_bean3.code;
								}else{
									device_alarm+=","+_bean3.code;
								}
							}else if(_s3=="3"){
								if(quality_alarm==""){
									quality_alarm=_bean3.code;
								}else{
									quality_alarm+=","+_bean3.code;
								}
								if(device_alarm==""){
									device_alarm=_bean3.code;
								}else{
									device_alarm+=","+_bean3.code;
								}
							}
						}
					}else{
						var bean:ResHeadendBean=DataManager.getHeadendByCode(headendBean.code) as ResHeadendBean;;
						if(bean.site_status=="1"){
							quality_alarm=bean.code;
						}else if(bean.site_status=="2"){
							device_alarm=bean.code;
						}else if(bean.site_status=="3"){
							quality_alarm=bean.code;
							device_alarm=bean.code;
						}
					}
					
					if(device_alarm!=""){
						option.fillStyle.color=0xFF0202;
					}else if(quality_alarm!=""){
						option.fillStyle.color=0xC5FB03;
					}else {
						option.fillStyle.color=0x647E06;
					}
					if(quality_alarm==""){
						quality_alarm="无";
					}
					if(device_alarm==""){
						device_alarm="无";
					}
				
					option.tooltip=headendBean.shortname_noab+"\n指标报警:"+quality_alarm+"\n设备报警:"+device_alarm;
					marker.setOptions(option);					
					markerMethod(marker,headendBean);
					
					
				}
				
			
			
			}
			private function markerMethod(marker:Marker,headBean:ResHeadendBean):void{
				map.addOverlay(marker);
			}
			private function  toNumber(str:String):String{
				if(str.indexOf("E")!=-1){
					return str.replace("E",".");
				}
				if(str.indexOf("W")!=-1){
					return "-"+str.replace("W",".");
				}
				if(str.indexOf("S")!=-1){
					return "-"+str.replace("S",".");
					
				}
				if(str.indexOf("N")!=-1){
					return str.replace("N",".");
					
				}
				return str;
			}	
		]]>
	</fx:Script>
	<s:HGroup width="100%" height="100%" id="world" paddingTop="10" includeInLayout="false" visible="false">
		<s:Panel  title="今日报警信息" width="20%" height="100%"> 
			<s:VGroup width="100%" height="100%" horizontalAlign="center" paddingTop="5">
				<s:TabBar id="tab" dataProvider="{vs}" change="itemClick(event)"/> 
				<mx:ViewStack id="vs" width="100%" height="100%" creationPolicy="all">
					
					<s:NavigatorContent id="qualityContent" label="指标报警"> 
						<s:VGroup width="100%" height="100%" verticalAlign="top" paddingLeft="5" paddingRight="8">
							<contaners:SimpleContainer id="quality" width="100%" height="100%">
								<contaners:layout>
									<s:VerticalLayout verticalAlign="top" horizontalAlign="center" />
								</contaners:layout>
							</contaners:SimpleContainer>
						</s:VGroup>
						
					</s:NavigatorContent> 
					
					<s:NavigatorContent id="deviceContent" label="设备报警"> 
						<s:VGroup  width="100%" height="100%" verticalAlign="top" paddingLeft="5" paddingRight="8">
							<contaners:SimpleContainer id="device" width="100%" height="100%">
								<contaners:layout>
									<s:VerticalLayout verticalAlign="top" horizontalAlign="center" />
								</contaners:layout>
							</contaners:SimpleContainer>
						</s:VGroup>
						
					</s:NavigatorContent>
				</mx:ViewStack>
			</s:VGroup>
		</s:Panel>
		<s:HGroup width="65%" height="100%" id="worldmap">
			
			<mx:Canvas     width="100%" height="100%">
				<!--s:HGroup    verticalAlign="top" horizontalAlign="right">
				<s:Button  label="世界地图" click="openWorld()"/>
				</s:HGroup-->
				<!--maps:Map language="zh-CN" id="map" sensor="false"
						  key="ABQIAAAAjg2LNPeLd2SY_LMC4kTfyhREhvxbmPPYdzuafsMTRfCiNgtm-xT_QN9uPU6M7JTAKA4l_ycXr_8HOg"
						  
						  mapevent_mapready="onMapReady(event)"
						  width="100%" height="100%" />
				<s:VGroup width="100%" height="50">
					<s:HGroup width="100%">
						<s:Button label="放大" click="zoomIn()" />
						<s:Button label="缩小" click="zoomOut()" />
					</s:HGroup>
				</s:VGroup-->
				<mx:Canvas  id="bc"   width="100%" height="100%"  />
			</mx:Canvas>
		</s:HGroup>
		
		
		<s:Panel  title="海外监测站点" width="15%" height="100%"> 
			<s:VGroup width="100%" horizontalAlign="center" paddingLeft="6" paddingRight="6" paddingTop="2" paddingBottom="2">
				<s:VGroup width="100%" paddingTop="5" horizontalAlign="center">
					<!--s:Label text="美国 华盛顿 OAS001A"/-->
					<s:Image source="com/viewscenes/images/default/global/baseBG.jpg" width="100%" height="112"/>
				</s:VGroup>
				
				<mx:Tile width="100%" height="120" paddingLeft="20" paddingRight="2" horizontalAlign="center">
					<mx:Repeater id="rp" dataProvider="{btns}" recycleChildren="true" >
						<s:Button buttonMode="true"  color="0x000000" width="100%" label="  {rp.currentItem.label}  " click="onNavClick(event)" />
					</mx:Repeater>
				</mx:Tile>
				<s:VGroup width="100%">
					<s:VGroup width="100%">
						<s:Label text="采集点：{cjd_count}个" id="a"/>
						<s:Label text="遥控站：{ykz_count}个"/>
						<s:Label text="在线站点：{online_count}个"/>
						<s:Label text="设备报警站点：{device_alarm_count}个"/>
						<s:Label text="指标报警站点：{quality_alarm_count}个"/>
						<s:Label text="双报警报警站点：{double_alarm_count}个"/>
					</s:VGroup>
					<!--s:HGroup width="100%">
						<embed:EmbedText width="100%" height="100%" _color="0xffffff"    _textl="2012-10-11 20:00:00 &#13; asdfasdfsad \nfasdfasdf SPH001A下线"/>
					</s:HGroup-->
					
				</s:VGroup>
			</s:VGroup>
		</s:Panel>
	</s:HGroup>
	<s:HGroup width="100%" height="100%" id="mm" paddingTop="10" >
		
		<mx:Canvas  backgroundColor="#000000"    width="100%" height="100%">
			<!--s:HGroup    verticalAlign="top" horizontalAlign="right">
			<s:Button  label="世界地图" click="openWorld()"/>
			</s:HGroup-->
			<maps:Map  id="map"  
					   key="no-key" mapevent_mapready="onMapReady(event)"
					   width="100%" height="100%" />
			<s:VGroup width="100%" height="50">
				<s:HGroup width="100%">
					<s:Button label="放大" click="zoomIn()" />
					<s:Button label="缩小" click="zoomOut()" />
					<!--s:Button label="返回" click="zoomReturn()" /-->
				</s:HGroup>
			</s:VGroup>
			
		</mx:Canvas>
	</s:HGroup>
</system:BasePage>
