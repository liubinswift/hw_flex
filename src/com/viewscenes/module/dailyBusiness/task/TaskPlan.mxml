<?xml version="1.0" encoding="utf-8"?>
<system:BasePage xmlns:fx="http://ns.adobe.com/mxml/2009" 
				 xmlns:s="library://ns.adobe.com/flex/spark" 
				 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:system="com.morcha4.frame.system.*" 
				 width="100%" height="100%" xmlns:global="com.viewscenes.global.*" 
				 xmlns:timecomp="com.viewscenes.utils.timecomp.*" xmlns:flipBar="com.viewscenes.utils.flipBar.*">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.morcha4.RPC.RPCManager;
			import com.morcha4.RPC.request.RORequestParam;
			import com.morcha4.util.RendererUtil;
			import com.viewscenes.beans.task.Task;
			import com.viewscenes.global.DataManager;
			import com.viewscenes.utils.timecomp.DateUtil;
			import com.viewscenes.utils.timecomp.TimeNew;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.IFlexDisplayObject;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			
			import spark.components.TitleWindow;
			[Bindable]
			public var sendTypeColl:ArrayCollection = new ArrayCollection(
				[ {label:"全部任务", data:"0"},
					{label:"临时任务", data:"1"}, 
					{label:"运行图", data:"2"} ]);
			public var sendReadyColl:ArrayCollection = new ArrayCollection(
				[  {label:"全部", data:"0"}, 
					{label:"未下发未审核", data:"1"}, 
					{label:"已审核未下发", data:"2"},
					{label:"下发失败", data:"3"},
					{label:"等待下发", data:"4"},
					{label:"已下发", data:"5"}]);
			[Bindable]
			private var allselect:String="false";
			
			public var taskTypeColl:ArrayCollection = new ArrayCollection(
				[  {label:"全部", data:"0"}, 
					{label:"指标任务", data:"1"}, 
					{label:"录音任务", data:"2"},
					{label:"频偏任务", data:"3"},
					{label:"频谱任务", data:"4"} ]);
			[Bindable]
			public var querydata:ArrayCollection = new ArrayCollection();
			/*
			**	任务查询方法
			*/
			public function clickQueryTask():void{
				con_clewlabel(clew_label,true,'正在查询，请稍候...');
				querydata = new ArrayCollection();
				
				var obj:Task = new Task();
				
				var codeNoAB:String = station.oStation.getHeadCode;
				var codeAB:String = station.oStation.getHeadABCode;
				var receiveEqu:String = station.oStation.getEquTypeValue;
				obj.equ_code = receiveEqu;
				if(codeNoAB == ""){
					obj.head_code = "";
				} else{
					obj.head_code = codeNoAB +","+codeAB;
				}
				obj.task_type = this.oTaskType.selectedItem.data;
//				obj.is_send=this.osendReadyType.selectedItem.data;
				obj.is_temporary=this.ocreataTaskType.selectedItem.data;
//				if(this.oValidTimeCheckBox.selected==true)
//				{
//					obj.valid_enddatetime=this.oValidDate.text;
//					
//				}
//				
				var date:Date=new Date();
				var date2:Date=DateUtil.addDays(date,1);
				var month=date2.getMonth()+1;
				if(month<10)
					month="0"+month;
				var day=date2.getDate();
				if(day<10)
					day="0"+day;	
				
				var starttime=date2.getFullYear()+"-"+month+"-"+day+" "+"00"+":"+"00"+":"+"00";
				var endtime=date2.getFullYear()+"-"+month+"-"+day+" "+"23"+":"+"59"+":"+"59";
				obj.start = starttime;
				obj.end = endtime;
				
                pagebar.m_sendCmd(new RORequestParam("com.viewscenes.web.task.TaskManager","queryAllTaskPlanList",obj,clickQueryTaskProcess,DataManager.showErrorMessageBack,true,null,DataManager.server_app_id));
				
			}
			private function clickQueryTaskProcess(obj:ArrayCollection):void{
				con_clewlabel(clew_label,false);
				querydata.removeAll();
				querydata=obj;	
				for(var i:int=0;i<querydata.length;i++){
					var task:Task = querydata.getItemAt(i) as Task;
					task.is_temporary = task.is_temporary+(task.record_type==""?"":"["+task.record_type+"]");
					querydata.setItemAt(task,i);
				}
				if(obj.length==0){
					
					con_clewlabel(clew_label,true,"无查询数据！");
				}
				
			}
			
			/**
			 * 控制datagrid的提示框是否显示，以及显示内容
			 * author:cht
			 * **/
			public function con_clewlabel(_component:Label,_visible:Boolean,_label:String="")
			{
				_component.visible=_visible;
				_component.includeInLayout=_visible;
				_component.text=_label;
			}
			private function clickChooseAll():void{
				if(allselect=="false")
				{
					allselect="true";
				}else
				{
					allselect="false";	
				}
				
				for(var i:int=0;i<querydata.length;i++)
				{
					querydata.getItemAt(i).isSelected=allselect;
					querydata.refresh();
					datagrid.dataProvider = querydata;
				}
				
				
			}
			//选择点中后执行的方法
			[Bindable]
			public var selectedCounts:int =0;
			private function changeSelect(obj:Object):void{
				
				if(obj.data.isSelected=="true"){
					this.selectedCounts=selectedCounts+1;  
				}else{
					this.selectedCounts=selectedCounts-1; 
				}
			}
			private function getTaskStatus(obj:Object):void{
				
				
				if(obj.data.is_send=="已下达")
				{
					if(DataManager.getHeadendIsOnline( obj.data.head_code)==false)
					{
						var task:Object = new Object();
						
						task.stationCode = obj.data.head_code
						task.task_id=obj.data.task_id;
						task.userid=DataManager.user.userId;
						var request:RORequestParam = new RORequestParam("com.viewscenes.web.task.TaskManager","getTaskStatus",task,getTaskStatusProcess,DataManager.showErrorMessageBack,true,null,DataManager.server_app_id);
						RPCManager.sendCmd(request); 
					}else 
					{
						DataManager.showErrorMessage("站点不在线，无法查看任务执行状态！");
						return ;
					}
				}else 
				{
					DataManager.showErrorMessage("任务还没有下发，无法查看任务执行状态！");
					return ;
				}
				
				
				
			}
			private function getTaskStatusProcess(retStr:String):void{
				
				DataManager.showErrorMessage(retStr);
				
			}
			private function getTaskDesc(obj:Object):void{
				var taskResult:TaskDesc = TaskDesc(PopUpManager.createPopUp(this,TaskDesc,true,null));
				var nobj:Object = new Object;
				nobj.data = obj.data;
				nobj.pageType = "plan";
				taskResult.onShowTaskData(nobj);
				PopUpManager.centerPopUp(taskResult);
				taskResult.x=50;
				taskResult.y=50;
				
				
			}
			private function closeHandler(event:Event):void {
				
				PopUpManager.removePopUp(this);
			}
			
		]]>
	</fx:Script>
	
	<s:VGroup  width="100%"  height="100%" paddingTop="30" >
		<s:HGroup width="100%"  horizontalAlign="left" verticalAlign="middle" paddingLeft="10">
			
			<global:HeadendAllAndStateList id="station" headDataAll="true"/>
			<s:Label text="任务类型："/>
			<s:DropDownList id="oTaskType" dataProvider="{taskTypeColl}"   selectedIndex="0" />
			<s:Spacer width="10"/>
			<!--s:Label text="任务下发状态："/>
			<s:DropDownList id="osendReadyType" dataProvider="{sendReadyColl}"  selectedIndex="0"/-->
			<s:Spacer width="10"/>
			<s:Label text="生成方式："/>
			<s:DropDownList id="ocreataTaskType" dataProvider="{sendTypeColl}"  selectedIndex="0" />
			<s:Spacer width="10"/>
			<!--s:CheckBox label="有效时间" id="oValidTimeCheckBox"/>
			<timecomp:TimeNew  id="oValidDate"/-->
			<s:Spacer width="10"/>
			
		</s:HGroup>
		<mx:HRule strokeWidth="1" strokeColor="#a0a0a0" shadowColor="#000000" width="100%" />
		<s:HGroup width="100%" paddingLeft="10">
			<s:Button buttonMode="true" click="clickQueryTask();" label="任务查询" />
			<s:Spacer width="26"/>
			<s:Button buttonMode="true" click="clickChooseAll();" label="全选" />
			<!--s:Button click="clickDeleteChooseComfirm();"  label="删除所选任务" />
			<s:Button buttonMode="true" click="AuthChooseAll();" label="审核选中任务" />
			<s:Button buttonMode="true" click="sendChooseAll();" label="下发选中任务" /-->
			<s:Spacer width="26"/>
			<s:Label text="正在查询，请稍候..."   fontSize="12" color="#ff0000" id="clew_label" y="{datagrid.columnHeaderGroup.height+10}" width="100%" textAlign="center"  visible="false" includeInLayout="false" />				
			
		</s:HGroup>
		
		
		
		<s:DataGrid id="datagrid" width="100%"    textAlign="center" height="100%" dataProvider="{querydata}"  showDataTips="true">
			<s:columns>  
				<s:ArrayCollection>
					
					<s:GridColumn headerText="选择"  itemRenderer="{RendererUtil.getCheckBoxRenderer(changeSelect)}" />
					
					<s:GridColumn headerText="状态" itemRenderer="{RendererUtil.getButtonRenderer('状态',getTaskStatus,null)}" >
						
					</s:GridColumn>
					
					<s:GridColumn headerText="类型" dataField="task_type"/>
					<s:GridColumn headerText="是否下达" dataField="is_send" />
					<s:GridColumn headerText="生成时间 " dataField="batch_no" />
					<s:GridColumn headerText="生成方式 " dataField="is_temporary" />
					<s:GridColumn headerText="有效期" dataField="validDate" width="140"        />
					<s:GridColumn headerText="发送站点" dataField="shortname" />
					<s:GridColumn headerText="频率" dataField="freq"  />
					<s:GridColumn headerText="播音时间" dataField="play_time"  />
					<s:GridColumn headerText="语言" dataField="language"  />
					<s:GridColumn headerText="发射台" dataField="station_name"  />
					<!--s:GridColumn headerText="创建人" dataField="create_user"/>	
					<s:GridColumn headerText="审核人" dataField="authentic_user"  /-->
					<s:GridColumn headerText="发送人" dataField="send_user" />
					<s:GridColumn headerText="详细" itemRenderer="{RendererUtil.getButtonRenderer('详细',getTaskDesc,null)}">	
					</s:GridColumn>
				</s:ArrayCollection>
			</s:columns>
		</s:DataGrid>
		
		
		<flipBar:PageBar width="100%" height="20" id="pagebar" rowConutOfPage="20" totalPageQuery="5" />
		
		
	</s:VGroup>
	
	
</system:BasePage>
