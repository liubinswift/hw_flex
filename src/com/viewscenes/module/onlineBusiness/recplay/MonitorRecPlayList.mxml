<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:flipBar="com.viewscenes.utils.flipBar.*">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.morcha4.util.RendererUtil;
			import com.viewscenes.beans.StreamHistoryQueryResult;
			import com.viewscenes.beans.pub.ResHeadendBean;
			import com.viewscenes.beans.runplan.RunplanBean;
			import com.viewscenes.beans.task.Task;
			import com.viewscenes.global.DataManager;
			
			import mx.controls.Alert;
			
			
			public var radioMark:RadioMark;
			
			//录音列表
			[Bindable]
			private var recList:ArrayCollection = new ArrayCollection;
			
			//任务相关信息
			[Bindable]
			private var task:Task =null;
			
			//站点相关信息
			[Bindable]
			private var headendBean:ResHeadendBean =null;
			
			//运行图相关信息
			[Bindable]
			private var runplanBean:RunplanBean =null;
			
			/**
			 *为外部提供的设置查询结果的方法 
			 */
			public function msgStreamHistoryQueryCmdBack(arr:ArrayCollection):void{
				showTips(false);
				recList = arr;
				
				if (arr.length >0){
					var streamhistoryqueryresult:StreamHistoryQueryResult = arr.getItemAt(0) as StreamHistoryQueryResult;
					if (task != null){
						task = streamhistoryqueryresult.task;
					
						//如果运行图ID不为空,则代表是运行图任务,同时也会返回运行图对象
						if (task.runplan_id != ""){
							var t:RunplanBean = streamhistoryqueryresult.runplanBean;
							//证明找到了运行图的相关信息
							if (t != null){
								runplanBean = t;
							}
						}
						headendBean = DataManager.getHeadendByCode(task.head_code);
					}
				}
			}
			
			
			/**
			 * 播放和打分
			 */ 
			private function playAndMark(obj:Object):void{
				var streamHistoryQueryResult:StreamHistoryQueryResult = obj.data as StreamHistoryQueryResult;
				radioMark.play(streamHistoryQueryResult.url);
			}
			
			/**
			 * 查询时提示信息
			 */ 
			public function showTips(b:Boolean):void{
				
				if (b == true){
					clew_label.y = recGrid.y+32;
					clew_label.visible = true;
					clew_label.includeInLayout = true;
					clew_label.text = "正在查询,请稍候...";
				}else{
					clew_label.visible = false
					clew_label.includeInLayout = false;
					clew_label.text = "";
				}
			}
			
			/**
			 * 波段标签
			 */ 
			private function bandLabelFunc(item:Object,gc:GridColumn):String
			{
				if (item.band == "0")
					return "短波";
				else if (item.band == "1")
					return "中波";
				else
					return "调频";
			}
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%" paddingLeft="5" paddingRight="5">
		<mx:Canvas width="100%" height="100%">
			<s:DataGrid id="recGrid"  width="100%" height="100%" dataProvider="{recList}" >
				<s:columns>
					<s:ArrayCollection>
						<s:GridColumn dataField="band" width="60" headerText="波段"  labelFunction="bandLabelFunc"/>
						<s:GridColumn dataField="freq"  headerText="频率" width="60" />
						<s:GridColumn dataField="startDateTime"  headerText="开始时间" />
						<s:GridColumn dataField="endDateTime"  headerText="结束时间" />
						<!--s:GridColumn dataField="fileName"  headerText="文件名" /-->
						
						<s:GridColumn dataField="equCode"  headerText="接收机" />
						<s:GridColumn dataField="url"  headerText="音频流" />
						<!--s:GridColumn dataField=""  headerText="分数" /-->
						<s:GridColumn headerText="播放" width="50" itemRenderer="{RendererUtil.getButtonRenderer('播放',playAndMark)}"/>
					</s:ArrayCollection>
				</s:columns>
			</s:DataGrid>
			<mx:Label  id="clew_label" y="{recGrid.columnHeaderGroup.height+10}" width="100%" textAlign="center" color="0x000000" visible="false" includeInLayout="false" />
		</mx:Canvas>
		<!--分页组件所在地-->
		<flipBar:PageBar  id="pagebar" rowConutOfPage="20" totalPageQuery="10" height="20"/>
	</s:VGroup>	
	
</s:Group>
