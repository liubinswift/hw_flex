<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:playBar="com.viewscenes.utils.player.playBar.*">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.viewscenes.utils.player.playBar.playBarNew")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import mx.events.SliderEvent;
			
			  
			/**
			 *  @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
			{
				// Push backgroundColor and backgroundAlpha directly.
				// Handle undefined backgroundColor by hiding the background object.
				if (getStyle("backgroundColors")==null)
				{
					background.visible = false;
				}
				else
				{
					background.visible = true;
					bgFill1.color = getStyle("backgroundColors")[0];
					bgFill2.color = getStyle("backgroundColors")[1];
				}
				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}
		]]>
	</fx:Script>
	<!-- states -->
	<s:states>
		<s:State name="record" />
		<s:State name="realtime" />
		<s:State name="disabled" />
		<s:State name="normal" />
	</s:states>
	
	<!--- Defines the appearance of the SkinnableContainer class's background. -->
	<s:Rect id="background" left="0" right="0" top="0" bottom="0">
		<s:fill>
			<!--- @private -->
			<s:LinearGradient rotation="90">
				<s:GradientEntry id="bgFill1"/>
				<s:GradientEntry id="bgFill2"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	<!-- SkinParts
	name=contentGroup, type=spark.components.Group, required=false
	-->
	<s:VGroup id="contentGroup" left="5" right="5" top="5" bottom="5" minWidth="0" minHeight="0" gap="0">
		<s:HGroup width="100%" verticalAlign="middle" includeIn="record" visible="false" includeInLayout="false">
			<s:HSlider id="time_slider" dataTipFormatFunction="{hostComponent.getStr}" skinClass="com.morcha4.skin.slider.HSliderSkin" width="100%" change="{hostComponent.ontimechange(event)}" minimum="0" snapInterval="1" liveDragging="false" 
					   dataTipPrecision="0" /> 
			<s:Label id="timeTipL" visible="false" includeInLayout="false"/>
		</s:HGroup>
		<s:HGroup gap="0" paddingLeft="10" width="100%" verticalAlign="middle" paddingRight="10">
			<playBar:PlayButton id="playButton" styleName="leader" visible="false" includeInLayout="false"/>
			<!--s:Spacer width="10"/-->
			<playBar:StopButton id="stopButton" styleName="leader" visible="false" includeInLayout="false"/>
			<!--s:Spacer width="30"/-->
			<playBar:rolltext width="100%" minWidth="30" id="text" clipAndEnableScrolling="true" visible="false" includeInLayout="false"/>
			<s:Spacer width="20"/>
			<playBar:JYButton id="jyButton" visible="false" includeInLayout="false"/>
			<s:HSlider id="volume_slider" value="50" width="100" minimum="0" maximum="100" change="{this.dispatchEvent(new PlayBarEvent('volume',true,false,volume_slider.value))}" liveDragging="true" 
					   dataTipPrecision="0" showDataTip="false" visible="false" includeInLayout="false"/>
			<s:Spacer width="10"/>
			<playBar:FullButton id="fullButton" visible="false" includeInLayout="false"/>
		</s:HGroup>
	</s:VGroup>
</s:Skin>
