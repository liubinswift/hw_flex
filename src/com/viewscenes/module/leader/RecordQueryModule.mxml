<?xml version="1.0" encoding="utf-8"?>
<system:BasePage xmlns:fx="http://ns.adobe.com/mxml/2009" 
				 xmlns:s="library://ns.adobe.com/flex/spark" 
				 xmlns:mx="library://ns.adobe.com/flex/mx" 
				 xmlns:system="com.morcha4.frame.system.*" 
				 width="100%" height="100%" 
				 xmlns:onlineListen="com.viewscenes.module.onlineBusiness.onlineListen.*" 
				 xmlns:player="com.viewscenes.utils.player.*" 
				 xmlns:utils="com.viewscenes.utils.*"
				 xmlns:timecomp="com.viewscenes.utils.timecomp.*" 
				 xmlns:flipBar="com.viewscenes.utils.flipBar.*" 
				 xmlns:contaners="com.morcha4.ui.contaners.*">
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.morcha4.RPC.RPCException;
			import com.morcha4.RPC.RPCManager;
			import com.morcha4.RPC.request.RORequestParam;
			import com.morcha4.util.RendererUtil;
			import com.viewscenes.beans.RadioStreamResultBean;
			import com.viewscenes.beans.RealtimeUrlCmdBean;
			import com.viewscenes.beans.pub.ResHeadendBean;
			import com.viewscenes.beans.runplan.RunplanBean;
			import com.viewscenes.global.DataManager;
			import com.viewscenes.global.comp.MM;
			import com.viewscenes.utils.StringTool;
			import com.viewscenes.utils.timecomp.DateUtil;
			
			import mx.collections.ArrayCollection;
			//import mx.controls.Alert;
			//播放器前端列表
			[Bindable]
			private var headendArr:ArrayCollection = new ArrayCollection;
			//播放的站点信息对象
			[Bindable]
			private var headendBean:ResHeadendBean = null;
			[Bindable]
			private var recFileArray:ArrayCollection = new ArrayCollection;
			//播放的运行图信息
			[Bindable]
			private var runplanBean:RunplanBean = null;
			
			[Bindable]
			private var urlCmdBean:RealtimeUrlCmdBean = null;
			//正在播放的频率
			[Bindable]
			private var freq:String = "";
			//播放节目所使用的接收机
			[Bindable]
			private var equCode:String = "";
			
			//上次播放的URL
			[Bindable]
			private var lastUrl:String = null;
	
			
			//当前正在播放的节目信息对象
			[Bindable]
			private var curRadioStreamResult:RadioStreamResultBean = null;
			private var  flag:Boolean=false;//记录播放状态 true:正在播放,false:停止播放
			
			[Bindable]
			private var equArray:ArrayCollection = new ArrayCollection();
			[Bindable]
			private var arrBPS:ArrayCollection = new ArrayCollection([8000,16000,32000,64000,128000]);
			
			
			private function headend_changeHandler(event:Event):void{
				var headendBean:ResHeadendBean = event.currentTarget.selectedItem as ResHeadendBean;
				getEquListByCode(headendBean.code);
			}
			private function getEquListByCode(code:String):void{
				
				RPCManager.sendCmd(new RORequestParam("com.viewscenes.web.common.Common","getEquList",code,getEquListBack,DataManager.showErrorMessageBack));
			}
			
			private function getEquListBack(arr:ArrayCollection):void{
				equArray = arr;
			}
			
			/**
			 * 语言标签
			 */ 
			private function languageLabelFunc(item:Object,gc:GridColumn):String
			{
				if (item.language == null || item.language == ""){
					var runplanBean:RunplanBean = item.runplanBean as RunplanBean;
					if (runplanBean != null)
						return runplanBean.program_name;
					else 
						return "";
				}else{
					return item.language;
				}
			}
			
			
			/**
			 * 发射台标签
			 */ 
			private function stationLabelFunc(item:Object,gc:GridColumn):String
			{
				if (item.stationName == null || item.stationName == ""){
					var runplanBean:RunplanBean = item.runplanBean as RunplanBean;
					if (runplanBean != null)
						return runplanBean.station_name;
					else 
						return "";
				}else{
					return item.stationName;
				}
			}
			
			/**
			 * 查询数据库录音文件及相关打分信息
			 */ 
			private function recFileQuery():void//主要作用在于初始化
			{
				
				recFileArray.removeAll();
				//校验频率
				if (inputFreq.text != "" && StringTool.getBandFromFreq(inputFreq.text) == ""){
					DataManager.showErrorMessage("输入的频率范围不合法,请重新输入");
					inputFreq.setFocus();
					return ;
				}
				
				//校验时间
				var result:Number = DateUtil.compareDateStr(startDatetime.text,endDatetime.text);
				if (result != -1){
					DataManager.showErrorMessage("开始时间不能大于或等于结束时间");
					return ;
				}
				
				showTips(true,"正在查询,请稍候...");
				var obj:Object = new Object;
				//录音类型
				obj.recType = "1";//效果录音
				obj.runplanType = "0";
				obj.headCode =  website.selectedItem==null?"":website.selectedItem.code;
				obj.freq = inputFreq.text;
				obj.dateType = "byTime";
				obj.startDateTime = startDatetime.text;
				obj.endDateTime = endDatetime.text;
				obj.handle = "";
				
				//站点类型101,102
				obj.headtype = website.selectedItem.type_id;
				//站点A或B
				obj.abCode = "";
				//接收机
				obj.receiver = "";
				
				pagebar11.m_sendCmd(new RORequestParam("com.viewscenes.web.daily.queryData.RecFileQuery","recFileQuery",obj,recFileQueryBack,DataManager.showErrorMessageBack));
			}
			
			
			private function recFileQueryBack(arr:ArrayCollection):void{
				if (arr.length ==0)
					showTips(true,"查询无数据!");
				else
					showTips(false);
				recFileArray = arr;
				recFileArray.refresh();
			}
			
			/**
			 * 查询时提示信息
			 */ 
			private function showTips(b:Boolean,msg:String=""):void{
				
				if (b == true){
					clew_label.y = result.y+32;
					clew_label.visible = true;
					clew_label.includeInLayout = true;
					clew_label.text = msg;//"正在查询,请稍候...";
				}else{
					clew_label.visible = false
					clew_label.includeInLayout = false;
					clew_label.text = "";
				}
			}
			private function playURL(url:String):void
			{
				// TODO Auto-generated method stub
				//if(flag==false){
					//playbtn.source="com/viewscenes/images/default/global2/onlinelisten/stop_btn.png";
					//flag=true
					player.playUrl(url)
					player.volume("100");
				//}else{
				//	playbtn.source="com/viewscenes/images/default/global2/onlinelisten/play_btn.png";
				//	flag=false;
				//	player.stop();
				//}
				
				
			}
			private function playAndMark(obj:Object):void{  
				curRadioStreamResult=obj.data as RadioStreamResultBean
				runplanBean=curRadioStreamResult.runplanBean;
//				if(runplanBean!=null)
//				{
//					if(runplanBean.runplan_type_id=="1")
//					{
//						this.needchangetext.text="台名：";
//						this.stationName.text=this.runplanBean.station_name;
//						this.showSendCity.visible=false;
//						this.showSendCity.includeInLayout=false;
//					}else if(runplanBean.runplan_type_id=="2")
//					{
//						this.showSendCity.visible=false;
//						this.showSendCity.includeInLayout=false;
//						this.needchangetext.text="转播机构：";
//						this.stationName.text=this.runplanBean.redisseminators;
//					}else if(runplanBean.runplan_type_id=="3")
//					{
//						this.needchangetext.text="台名："
//						this.stationName.text=this.runplanBean.station_name;
//						this.showSendCity.visible=true;
//						this.showSendCity.includeInLayout=true;
//					}
//				}
				
				playURL(curRadioStreamResult.url);
				getHeadendInfo(curRadioStreamResult.head_id);
				
			}
			/**
			 * 根据站点id 获取站点详细信息
			 * */
			private function getHeadendInfo(id:String):void{
				var obj:Object = new Object();
				obj.head_id = id;
				RPCManager.sendCmd(new RORequestParam("com.viewscenes.web.common.Common","getHeadendListById",obj,getHeadendListBack,DataManager.showErrorMessageBack));
			}
			
			private function getHeadendListBack(obj:Object):void{
				headendBean = obj as ResHeadendBean;
			}
			
//			private function play():void{
//				if (flag==true){
//					playbtn.source="com/viewscenes/images/default/global2/onlinelisten/play_btn.png";
//					flag=false;
//					player.stop();
//				
//					this.stopRealtimeUrl(urlCmdBean);
//				}else{
//			
//						this.headendBean = headend.selectedItem as ResHeadendBean; 
//						
//						if (equ.selectedItem != null &&
//							equ.selectedItem.data != undefined && 
//							equ.selectedItem.data != "")
//							this.equCode = equ.selectedItem.data;
//					
//					if (inputfreq.text == ""){
//						MM.show("请输入要播放的频率");
//						return ;
//					}else{
//						freq=inputfreq.text;
//						var band:String = StringTool.getBandFromFreq(freq);
//						
//						if (band == ""){
//							//					DataManager.showErrorMessage("输入的频率范围不合法,请重新输入");
//							
//							MM.show("输入的频率范围不合法,请重新输入","","",null,false,null,null,-1,this.top);
//							return;
//						}
//					}
//					
//					var urlCmdBean:RealtimeUrlCmdBean = buildUrlCmdByFreq(headend.selectedItem.code,freq,"Start",bps.selectedItem);
//					
//					getRealtimeUrl(urlCmdBean);
//					
//				}
//			}
			/**
			 * 
			 * 发送监听指令
			 * */
//			private function getRealtimeUrl(urlBean:RealtimeUrlCmdBean):void{
//				//有录音,先停掉
//				
//				this.urlCmdBean = urlBean;
//				this.freq = urlBean.freq;
//				this.inputfreq.text=urlBean.freq;
//				var band:String = StringTool.getBandFromFreq(this.freq);
//				
//				//				if (band == "0"){//短波
//				//					setStep("5");
//				//				}else if (band == "1"){//中波
//				//					setStep("10");
//				//				}else if (band == "2"){//调频
//				//					setStep("100");
//				//				}
//				//				getRealtimeUrlBack("www.biau.com");
//				playbtn.enabled = false;
//				RPCManager.sendCmd(new RORequestParam("com.viewscenes.web.online.onlineListen.OnlineService","getRealtimeUrl",urlBean,getRealtimeUrlBack,showErrorMessageBack,true,null,DataManager.server_app_id));
//			}
			
//			private function getRealtimeUrlBack(url:String):void{
//				playbtn.enabled = true;
//				playbtn.source="com/viewscenes/images/default/global2/onlinelisten/stop_btn.png";
//				flag=true
//				player.playUrl(url);
//				player.setText("正在播放:"+url);
//				this.lastUrl = url;
//				var sPort:String = url.split(":")[2];
//				var port:int = int( sPort.substring(0,sPort.indexOf("/")));
//				if (port%2==0){
//					equCode = "R1";
//				}else if (port%2==1){
//					equCode = "R2";
//				}
//				
//			}
			/**
			 * 
			 * 根据手动输入频率生成发送URL请求指令
			 * */
//			private function buildUrlCmdByFreq(headCode:String,freq:String,action:String,bps:String):RealtimeUrlCmdBean{
//				var urlBean:RealtimeUrlCmdBean = new RealtimeUrlCmdBean;
//				
//				urlBean.freq =  freq;
//				urlBean.band =  StringTool.getBandFromFreq(inputfreq.text);
//				urlBean.userid =  DataManager.user.userId;
//				urlBean.code =  headCode;
//				urlBean.action = action;
//				urlBean.equCode = this.equCode;
//				urlBean.bps = bps;
//				urlBean.priority =  DataManager.user.priority;
//				if (lastUrl != null && lastUrl != "")
//					urlBean.lastUrl =  lastUrl;
//				
//				return urlBean;
//			}
			/**
			 * 
			 * 发送监听停止指令
			 * */
//			private function stopRealtimeUrl(urlBean:RealtimeUrlCmdBean):void{
//				var _urlBean:RealtimeUrlCmdBean = urlBean;
//				_urlBean.action = "Stop"
//				playbtn.enabled = false;
//				headendBean=null;
//				RPCManager.sendCmd(new RORequestParam("com.viewscenes.web.online.onlineListen.OnlineService","getRealtimeUrl",_urlBean,stopRealtimeUrlBack,showErrorMessageBack,true,null,DataManager.server_app_id));
//			}
//			private function stopRealtimeUrlBack(msg:String):void{
//				this.equCode = "";
//				this.lastUrl = null;
//				this.freq = "";
//				playbtn.enabled = true;
//				playbtn.source="com/viewscenes/images/default/global2/onlinelisten/play_btn.png";
//				
//			}
//			private function showErrorMessageBack(obj:RPCException,priObj:Object=null):void{
//				playbtn.enabled = true;
//				playbtn.source="com/viewscenes/images/default/global2/onlinelisten/play_btn.png";
//				MM.show(obj.message,"服务器异常","",null,false,null,null,-1,this.top);
//			}
			/**
			 * 下载录音文件
			 */ 
			private function downloadRec(obj:Object):void{
				var radioStreamResultBean:RadioStreamResultBean = obj.data as RadioStreamResultBean;
				var url:String = radioStreamResultBean.url;
				//				var arr:Array = new Array();
				//				arr.push(url);
				//				downloadHtml.callIFrameFunction("downloadByUrl",arr);
				
				downLoadFiles(url);
			}
			private var downloadURL:URLRequest;
			private var DownLoadfile:FileReference; //这是要主要的地方
			/**
			 * 下使用FileReference组件下载
			 */
			private function downLoadFiles(urlAdd:String):void
			{
				var filename:String = urlAdd.substring(urlAdd.lastIndexOf("/")+1,urlAdd.length);
				urlAdd = encodeURI(urlAdd);
				downloadURL = new URLRequest(urlAdd);
				DownLoadfile = new FileReference();
				configureListeners(DownLoadfile);
				DownLoadfile.download(downloadURL,filename);
			}
			private function configureListeners(dispatcher:IEventDispatcher):void {
				dispatcher.addEventListener(Event.COMPLETE, completeHandler);
				dispatcher.addEventListener(IOErrorEvent.IO_ERROR, errorShow);
				
			}
			private function completeHandler(event:Event):void {
				MM.show("文件下载成功");
			}
			private function errorShow(event:IOErrorEvent):void {
				if(event.errorID == 2038){
					MM.show("文件不存在");
				} else{
					MM.show(event.text);
				}
			}
		]]>
	</fx:Script>
	<s:HGroup width="100%" height="100%">
		
		<s:Group width="100%" height="100%" >
			<s:BitmapImage fillMode="scale" width="100%" height="100%" source="com/viewscenes/images/default/global2/onlinelisten/frame.jpg" />
			<s:VGroup top="0" left="0" width="100%"  height="100%" verticalAlign="top" horizontalAlign="center" >
				<s:HGroup id="image" width="100%"  height="5%" paddingTop="10" paddingLeft="20" paddingRight="20">
					<s:Image   buttonMode="true"  source="com/viewscenes/images/default/global2/onlinelisten/record.png" />
					<s:Spacer width="{image.width/2-52}" />
				</s:HGroup>
				<s:HGroup width="100%" height="5%" paddingLeft="20" paddingRight="20"    verticalAlign="middle">
					<s:Label text="站点:"/>
					<s:DropDownList id="website"   requireSelection="true" selectedIndex="0" dataProvider="{DataManager.headendNoABArr}" labelField="shortname"/>
					<s:Label text="频率(KHz):" />
					<utils:RegExpTextInput id="inputFreq"  width="60" restrict="0-9"  maxChars="6" />
					<s:Label text="起始时间：" />
					<timecomp:TimeNew id="startDatetime" starttime="00:00:00"/>
					<s:Label text="结束时间："/>
					<timecomp:TimeNew id="endDatetime" />
					<s:Button buttonMode="true" label="查询" click="recFileQuery()"  styleName="leaderButton"/>
					
				</s:HGroup>
				
				<mx:Canvas width="95%"  height="65%">
					<s:DataGrid width="100%" height="100%" styleName="leaderDataGrid"  id="result" textAlign="center" dataProvider="{recFileArray}">
						<s:columns>
							<s:ArrayCollection>
								<!--s:GridColumn headerText="波段" dataField="band" labelFunction="bandLabelFunc" width="60" /-->
								<s:GridColumn headerText="站点" dataField="shortname"  />
								<s:GridColumn headerText="频率" dataField="frequency" />
								<s:GridColumn headerText="开始时间"  dataField="start_datetime" />
								<s:GridColumn headerText="结束时间"  dataField="end_datetime"/>
								<s:GridColumn headerText="发射台"  labelFunction="stationLabelFunc"/>
								<s:GridColumn headerText="语言"   labelFunction="languageLabelFunc"/>
								<s:GridColumn headerText="播放"   itemRenderer="{RendererUtil.getButtonRenderer('播放',playAndMark)}"/>
								<s:GridColumn headerText="下载"   itemRenderer="{RendererUtil.getButtonRenderer('下载',downloadRec)}"/>
							</s:ArrayCollection>
						</s:columns>
					</s:DataGrid>
					<s:Label text="正在查询，请稍候..." color="0x000000" id="clew_label" y="{result.columnHeaderGroup.height+10}" width="100%" textAlign="center"  visible="false" includeInLayout="false" />				
				</mx:Canvas>
				<flipBar:PageBar  id="pagebar11" height="5%" rowConutOfPage="20" totalPageQuery="10"  />
				<s:VGroup width="95%" gap="0" height="10%" bottom="20">
					<player:Player id="player" mode="record" width="100%" />
				</s:VGroup>
			</s:VGroup>
		</s:Group>
	</s:HGroup>
	
	
	<!--iframe:HTML  id="downloadHtml" source="com/viewscenes/utils/download/download.html"  visible="false" width="0" height="0"/-->
</system:BasePage>
