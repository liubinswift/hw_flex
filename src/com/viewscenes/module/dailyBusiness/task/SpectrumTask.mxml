<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:timecomp="com.viewscenes.utils.timecomp.*"
		 xmlns:task="com.viewscenes.module.dailyBusiness.task.*" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 creationComplete="init();"
		 width="100%" height="100%">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.morcha4.RPC.RPCException;
			import com.viewscenes.global.DataManager;
			import com.viewscenes.module.dailyBusiness.task.addTask.LoopTime;
			import com.viewscenes.module.dailyBusiness.task.addTask.SingleTime;
			import com.viewscenes.utils.timecomp.DateUtil;
			[Bindable]public var task_type:String = "SpectrumTask";
			import mx.collections.ArrayCollection;
			import com.viewscenes.utils.StringTool;
			[Bindable]
			public var equColl:ArrayCollection = new ArrayCollection(
				[ {label:"自动选择", data:""},
					{label:"R1", data:"R1"}, 
					{label:"R2", data:"R2"} ]);
			public var upTypeColl:ArrayCollection = new ArrayCollection(
				[ {label:"不主动上报结果", data:"2"}, 
					{label:"等待间隔后上报", data:"1"}]);
			[Bindable]
			public var timeType:ArrayCollection = new ArrayCollection(
				[  {label:"分钟", data:"2"}, 
					{label:"秒钟", data:"1"}, 
					{label:"小时", data:"3"} ]);
			[Bindable]
			public var bandColl:ArrayCollection = new ArrayCollection(
				[  {label:"短波", data:"0"}, 
					{label:"中波", data:"1"}, 
					{label:"调频", data:"2"} ]);
		
			
			public function init():void{
				setDefaultValue();
			}
			//设置默认值
			public function setDefaultValue():void{
				var d:String = DateUtil.date2str(new Date(),"date");
				valid_startdatetime.text = d +" 00:00:00";
				var dd:Date = new Date();
				dd.fullYear = dd.fullYear + 1;
				var d2:String =DateUtil.date2str(dd,"date");;
				valid_enddatetime.text = (d2 +" 00:00:00");
				band.selectedIndex=0;
				unit.selectedIndex=0;

				priority.text = '0';
				sample_number.text = '1';
				expiredays.text = '30';
				sleep_time.text = '00:00:00';
				stepfreq.text = '5';
				startfreq.text = '2300';
				endfreq.text = '26100';
				
				LoopContainer.removeAllElements();
				SingleContainer.removeAllElements();
				SingleContainer.visible = false;
				SingleContainer.includeInLayout = false;
				addChildtoVBox("loop");
				
			}
			//type:独立时间(stand)/循环时间(loop)
			private function addChildtoVBox(type:String):void{
				var tmpObj:DisplayObject;
				if (type == "stand"){
					tmpObj = new SingleTime();
					SingleTime(tmpObj).task_type = task_type;
					SingleContainer.addChild(tmpObj);
					SingleContainer.visible = true;
					SingleContainer.includeInLayout = true;
					SingleContainer.visible = true;
				}else{
					tmpObj = new LoopTime();
					LoopTime(tmpObj).task_type = task_type;
					LoopContainer.addChild(tmpObj);
				}
				
				
			}
			//检查所有不能为空的输入框	
			private function checkAllIsNull():Boolean{
				var ret:Boolean = true;
				ret = sample_number.text == ""?false:true;
				if (!ret){
					
					DataManager.showErrorMessage("请正确输入采样个数" as RPCException);
					
					sample_number.setFocus();
					return ret;
				}
				
				
				ret = expiredays.text == ""?false:true;
				if (!ret){
					
					DataManager.showErrorMessage("请正确输入有效天数" as RPCException);
					expiredays.setFocus();
					return ret;
				}
				ret = stepfreq.text == ""?false:true;
				if (!ret){
					DataManager.showErrorMessage("请正确输入频率扫描步长" as RPCException);
				
					stepfreq.setFocus();
					return ret;
				}
				ret = startfreq.text == ""?false:true;
				if (!ret){
					DataManager.showErrorMessage("请正确输入起始扫描频率" as RPCException);
				
					startfreq.setFocus();
					return ret;
				}
				ret = endfreq.text == ""?false:true;
				if (!ret){
					DataManager.showErrorMessage("请正确输入终止扫描频率" as RPCException);
					
					endfreq.setFocus();
					return ret;
				}
				return ret;
			}
			
			private function checkSubTask():Boolean{
				return (SingleContainer.numChildren + LoopContainer.numChildren)>0?true:false;
			}
			//1.检查开始结束时间 
			private function checkValidDatetime():Boolean{
				var s:String = valid_startdatetime.text;
				var e:String = valid_enddatetime.text;
				
				return DateUtil.compareDateStr(s,e) == 1?false:true;
			}
			
			//1.检查循环时间段开始、结束时间;2.时间间隔校验
			private function checkLoopStartEndTime():Boolean{
				var loop_length:int = LoopContainer.numChildren;
				
				if (loop_length==0) return true;
				
				for(var j:int = 0;j<loop_length;j++){
					var loopTime:LoopTime = LoopContainer.getChildAt(j) as LoopTime;
					var s:String = loopTime._startTime.text;
					var e:String = loopTime._endTime.text;
					
					var retInt:Number = DateUtil.compareDateStr('2000-01-01 '+s,'2000-01-01 '+e);
					
					if (retInt == 1){
						loopTime._startTime.setFocus();
						return false;
						break;
					}
				}
				
				
				return  true;
			}
			//1.检查独立时间段开始、结束时间;2.时间间隔校验
			private function checkSingleStartEndDateTime():Boolean{
				
				var single_length:int = SingleContainer.numChildren;
				
				if (single_length==0) return true;
				
				var t_mode:String = "";
				for(var j:int = 0;j<single_length;j++){
					var singleTime:SingleTime = SingleContainer.getChildAt(j) as SingleTime;
					var s:String = singleTime._startDatetime.text;
					var e:String = singleTime._endDatetime.text;
					
					var retInt:Number = DateUtil.compareDateStr(s,e);
					
					if (retInt == 1){
						singleTime._startDatetime.setFocus();
						return false;
						break;
					}
				}
				
				return true;
			}
			/**
			 * 检查波段是否正确
			 * */
			private function checkBand():Boolean{
				var _band:String = band.selectedItem.data;
				var _startfreq:Number = Number(startfreq.text);
				var _endfreq:Number = Number(endfreq.text);
				var _stepfreq:Number = Number(stepfreq.text);
				if (_band == "0"){
					
					//1.开始大于终止
					if (_startfreq>_endfreq){
				
						DataManager.showErrorMessage("起始扫描频率不能大于终止扫描频率" as RPCException);
						
						endfreq.setFocus();
						return false;
						
					}
					
					//2.开始非法
					if (_startfreq<2300 || _startfreq >26100){
						DataManager.showErrorMessage("起始扫描频率不能小于2300或大于2610" as RPCException);

						startfreq.setFocus();
						return false;
					}
					
					//3.结束非法
					if (_endfreq<2300 || _endfreq >26100){
						DataManager.showErrorMessage("终止扫描频率不能小于2300或大于26100" as RPCException);

						endfreq.setFocus();
						return false;
					}
					
					//4.步长非法,大于结束与开始的差
					if (_stepfreq>(_endfreq-_startfreq)){
				
						DataManager.showErrorMessage("步长频率大于起始扫描频率与终止扫描频率之间的差值" as RPCException);

						stepfreq.setFocus();
						return false;
					}
				}
				
				if (_band == "1"){
					//1.终止大于开始
					if (_startfreq>_endfreq){					
						DataManager.showErrorMessage("起始扫描频率不能大于终止扫描频率" as RPCException);
						endfreq.setFocus();
						return false;
						
					}
					
					//2.开始非法
					if (_startfreq<531 || _startfreq >1602){				
						DataManager.showErrorMessage("起始扫描频率不能小于531或大于1602" as RPCException);
						startfreq.setFocus();
						return false;
					}
					
					//3.结束非法
					if (_endfreq<531 || _endfreq >1602){
						DataManager.showErrorMessage("终止扫描频率不能小于531或大于1602" as RPCException);
						endfreq.setFocus();
						return false;
					}
					
					//4.步长非法,大于结束与开始的差
					if (_stepfreq>(_endfreq-_startfreq)){
						DataManager.showErrorMessage("步长频率大于起始扫描频率与终止扫描频率之间的差值" as RPCException);
						
						stepfreq.setFocus();
						return false;
					}					
				}
				
				if (_band == "2"){
					//1.终止大于开始
					if (_startfreq>_endfreq){
						DataManager.showErrorMessage("起始扫描频率不能大于终止扫描频率" as RPCException);
						
						endfreq.setFocus();
						return false;
						
					}
					
					//2.开始非法
					if (_startfreq<87000 || _startfreq >108000){
		
						DataManager.showErrorMessage("起始扫描频率不能小于87000或大于108000" as RPCException);
						
						startfreq.setFocus();
						return false;
					}
					
					//3.结束非法
					if (_endfreq<87000 || _endfreq >108000){
					
						DataManager.showErrorMessage("终止扫描频率不能小于87000或大于1080000" as RPCException);
						
						endfreq.setFocus();
						return false;
					}
					
					//4.步长非法,大于结束与开始的差
					if (_stepfreq>(_endfreq-_startfreq)){

						DataManager.showErrorMessage("步长频率大于起始扫描频率与终止扫描频率之间的差值" as RPCException);
						
						stepfreq.setFocus();
						return false;
					}					
				}				
				return true;
			}		
	
			private function sendTask():void{
			    
				
				if (!checkSubTask()){
					DataManager.showErrorMessage("该任务没有子任务,无法生成,请添加子任务" as RPCException);
					return;
				}
				//检查所有不能为空的输入框
				if (!checkAllIsNull())
					return;
				
				
				if (!checkValidDatetime()){
					DataManager.showErrorMessage("有效开始时间不能大于或等于有效结束时间" as RPCException);

					valid_startdatetime.setFocus();
					return;
				}
				
				
				if (!checkSingleStartEndDateTime()){
					DataManager.showErrorMessage("独立时间段中存在开始时间大于或等于结束时间的设置" as RPCException);
					return;
				}
				//检查波段设置	
				if (!checkBand())
					return;
				
				
				var xml:String = "";
				this.sendSpectrumTaskBtn.enabled = false;
				sendSpectrumTaskBtn.label = '下发中';
	
			}
			private function bandChang(b:String):void{
				if (b == "0"){//短波
					stepfreq.text = '5';
					startfreq.text = '2300';
					endfreq.text = '26100';
				}else if (b == "1"){//中波
					stepfreq.text = '9';
					startfreq.text = '531';
					endfreq.text = '1602';
				}else if (b == "2"){//调频
					stepfreq.text = '100';
					startfreq.text = '87000';
					endfreq.text = '108000';
				}
			}
		]]>
	</fx:Script>
	<s:VGroup width="100%" height="100%" >
		<s:VGroup width="100%"  >
			<s:HGroup width="100%"   height="40" verticalAlign="middle">
				<s:Spacer width="16"/>
				<s:Label text="有效期 从:"/>
				<!--timecomp:mydata id="valid_startdatetime"/-->
				
				<timecomp:TimeNew  id="valid_startdatetime"/>	
				<s:Spacer width="15"/>
				<s:Label text="到:"/>

				<timecomp:TimeNew  id="valid_enddatetime"/>	
				<s:Spacer width="15"/>
				<s:Label text="优先级:"/>
				<s:TextInput maxChars="1" restrict="0-9" width="60" id="priority"/>
				<s:Label id="yxj" text="(0~9级)"/>
				<s:Spacer width="15"/>
				<s:Label text="每"/>
				<s:DropDownList id="unit" dataProvider="{bandColl}">
					
				</s:DropDownList>
				<s:Spacer width="15"/>
				<s:Label text="采样个数:"/>
				<s:TextInput  restrict="0-9"  width="35" id="sample_number"/>
				
				<s:Spacer width="15"/>

			</s:HGroup>
			<mx:HRule  strokeWidth="1" strokeColor="#a0a0a0" shadowColor="#000000" width="100%" />				
		</s:VGroup>
		<s:VGroup width="100%" >
			<s:HGroup width="100%"    height="40" verticalAlign="middle">
				<s:Spacer width="16"/>
				<s:Label text="收测时间间隔(秒):"/>
				<timecomp:TimeNew id="sleep_time" dateDisplay="time"/>
				<s:Spacer width="26"/>
				<s:Label text="频段扫描:"/>
				<s:DropDownList id="band" change="bandChang(band.selectedItem.data);" dataProvider="{bandColl}">
				
				</s:DropDownList>
				<s:Spacer width="26"/>
				<s:Label text="步长频率:"/>
				<s:TextInput restrict="0-9"  width="40" id="stepfreq"/>
				<s:Label text="KHz"/>
				<s:Spacer width="26"/>
				<s:Label text="起始扫描频率:"/>
				<s:TextInput restrict="0-9"  width="90" id="startfreq"/>
				<s:Label text="KHz"/>
				<s:Spacer width="26"/>
				<s:Label text="终止扫描频率:"/>
				<s:TextInput restrict="0-9"  width="90" id="endfreq"/>
				<s:Label text="KHz"/>
				<s:Spacer width="26"/>
				<s:Label text="接收机:"/>
				<s:DropDownList id="equ_code"  dataProvider="{equColl}">
					
				</s:DropDownList>
				<s:Spacer width="15"/>
				<s:Label text="有效天数:"/>
				<s:TextInput restrict="0-9"  width="40" id="expiredays"/>
			</s:HGroup>
			<mx:HRule strokeWidth="1" strokeColor="#a0a0a0" shadowColor="#000000" width="100%" />				
		</s:VGroup>
		<s:Spacer height="10"/>
		<s:HGroup width="100%" horizontalAlign="center" verticalAlign="middle">
			<s:Button buttonMode="true" label="添加循环时间"  click="addChildtoVBox('loopx');"/>
			<s:Spacer width="26"/>
			<s:Button buttonMode="true" label="添加独立时间" click="addChildtoVBox('stand');"/>
		</s:HGroup>		
		<s:Spacer height="10"/>
		<s:VGroup id="LoopContainer"  width="100%" verticalAlign="top" horizontalAlign="center" paddingTop="3" paddingBottom="3"  gap="10" >
			<task:LoopTime  task_type="{task_type}"/>	
		</s:VGroup>
		<s:VGroup id="SingleContainer" width="100%" verticalAlign="top" horizontalAlign="center"  visible="false" paddingTop="3" paddingBottom="3" gap="10" >
		</s:VGroup>
		<s:Spacer height="100%"/>
		<s:HGroup width="100%" horizontalAlign="center" verticalAlign="middle">
			<s:Button buttonMode="true" label="生成任务" id="sendSpectrumTaskBtn" click="sendSpectrumTask();"/>
		</s:HGroup>					
	</s:VGroup>
</s:Group>
