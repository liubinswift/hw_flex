<?xml version="1.0" encoding="utf-8"?>
<system:BasePage xmlns:fx="http://ns.adobe.com/mxml/2009" 
				 xmlns:s="library://ns.adobe.com/flex/spark" 
				 xmlns:system="com.morcha4.frame.system.*" 
				 width="100%" height="100%"  backgroundColor1="0xe3d4bd" backgroundColor2="0xaf8555" 
				 xmlns:timecomp="com.viewscenes.utils.timecomp.*" xmlns:DataGrid="mor.DataGrid.*" creationComplete="initApp();"
				 xmlns:util="com.viewscenes.utils.*"
				 PAGE_SHOW="basepage1_PAGE_SHOWHandler(event)"
				 xmlns:flipBar="com.viewscenes.utils.flipBar.*"
				 xmlns:global="com.viewscenes.global.*">
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	<fx:Script>
			<![CDATA[
				import com.morcha4.RPC.RPCException;
				import com.morcha4.RPC.RPCManager;
				import com.morcha4.RPC.request.RORequestParam;
				import com.morcha4.editor.ComboBoxEditor;
				import com.morcha4.editor.EditorManager;
				import com.morcha4.editor.TextEditor;
				import com.morcha4.util.RendererUtil;
				import com.viewscenes.global.DataManager;
				import com.viewscenes.global.DataManager;
				import flash.utils.setTimeout;
				
				import mx.collections.ArrayCollection;
				import mx.controls.Alert;
				import mx.core.UIComponent;
				import mx.events.CloseEvent;
				import mx.utils.ArrayUtil;
				import mx.utils.ObjectUtil;
				
				import spark.events.GridItemEditorEvent;
					
				[Bindable]private var listStat:ArrayCollection = new ArrayCollection();
				[Bindable]private var setArray:ArrayCollection = new ArrayCollection();
				
				
				public function initApp():void{
//					getEquByCode(this.station.selectedItem.code);
					
				}
//				/**
//				 * 根据站点代码获取接收机
//				 * */
//				private function getEquByCode(code:String):void{
//					RPCManager.sendCmd(new RORequestParam("com.viewscenes.web.common.Common","getEquList",code,processGetEquList,DataManager.showErrorMessageBack));
//				}
//				
//				private function processGetEquList(arr:ArrayCollection):void{
//					setArray.removeAll();
//					setArray=arr;
//					this.Receiver.selectedIndex=0;
//				}
					
				private function focusout(textinput:TextInput):void
				{
					var str:String=textinput.text;
					while(str.charAt(0)=='0')
					{
						str=str.substring(1,str.length);
					}
					textinput.text=str;
				}
				private function TimeCheck(e:MouseEvent):void
				{
					if(e.target.label=="按时间段查询")
					{ 
						Starttime_day.includeInLayout=true;
						Starttime.includeInLayout=false;
						Starttime_day.visible=true;
						Starttime.visible=false;
						endtimelabel.visible=true;
						Endtime_day.visible=true;
						space1.visible=true;
						space1.includeInLayout=true;
						space2.visible=true;
						space2.includeInLayout=true;
						begintimelabel.text="起始时间：";
					}
					else
					{
						Starttime_day.includeInLayout=false;
						Starttime.includeInLayout=true;
						Starttime.visible=true;
						Starttime_day.visible=false;
						endtimelabel.visible=false;
						Endtime_day.visible=false;
						space1.visible=false;
						space1.includeInLayout=false;
						space2.visible=false;
						space2.includeInLayout=false;
						begintimelabel.text="查询时间：";
					}
					
				}
				/**
				 * 
				 * <p>class/function com.viewscenes.web.daily.queryData
				 * <p>explain:指标数据查询,如果添加出错会返回错误信息
				 * <p>author-date:张文2012-8-20
				 * @param:
				 * @return:
				 */
				
				public function searchdata():void//主要作用在于初始化
				{
					
					var starttime:String=Starttime_day.text;
					var endtime:String=Endtime_day.text;
					
					if(starttime>endtime)
					{
						Alert.show("起始时间大于结束时间，请重新输入！");
						var date:Date=new Date();
						var date1:Date=new Date();
						date.setHours(00,00,00);
						Starttime_day.setDate(date);
						Endtime_day.setDate(date1);
						return;
					}
					listStat.removeAll();
					index_Query();
				}
				/**
				 * 控制datagrid的提示框是否显示，以及显示内容
				 * author:cht
				 * **/
				public function con_clewlabel(_component:Label,_visible:Boolean,_label:String="")
				{
					_component.visible=_visible;
					_component.includeInLayout=_visible;
					_component.text=_label;
				}
				
				private function index_Query():void
				{
					
					con_clewlabel(clew_label,true,'正在查询，请稍候...');
					var obj:Object = new Object;
					obj.taskId =taskId.text;
			
					obj.code =headend.headend.selectedItem.code;
			
//					obj.headID =this.station.selectedItem.head_id;
			
					//站点类型101,102
					obj.headtype = headend.headend.selectedItem.type_id;
					
					obj.abCode = headend.getHeadABCode;
					
					obj.receive_mark = headend.getEquTypeValue;
		
					obj.freq =Freq.text;

					if(Starttime_day.visible==true)
					{
						
						var starttime:String=Starttime_day.text;
						var endtime:String=Endtime_day.text;
						obj.startTime = starttime;
						obj.endTime = endtime;
						obj.dateType = "byTime";
					}
					else
					{
						obj.startTime = Starttime.text;
						obj.endTime = Starttime.text;	
						obj.dateType = "byDate";
					}
		
					pagebar.m_sendCmd(new RORequestParam("com.viewscenes.web.daily.queryData.IndexQuery","Query",obj,_Query,onfault));
					
				}
				private function _Query(list:ArrayCollection):void{ 
					con_clewlabel(clew_label,false);
					this.listStat=list;
				
					listStat.refresh();
					if(listStat.length==0){
						
						con_clewlabel(clew_label,true,"无查询数据！");
					}
			
				}
				
				private function onfault(e:RPCException):void
				{
					
					Alert.show(e.message);
				}
				
				private function bandFuc(item:Object,gc:GridColumn):String
				{
					var band:String="";
					if(item.band=="0"){
						band="短波";
					}else if(item.band=="1"){
						band="中波"
					}else if(item.band=="2"){
						band="调频"
					}
						
					return band;
				}
				
				private function typeFuc(item:Object,gc:GridColumn):String
				{
					var type:String="";
					if(item.type=="1"){
						type="载波电平";
					}else if(item.type=="3"){
						type="调幅度"
					}else if(item.type=="5"){
						type="调制度最大值"
					}else if(item.type=="8"){
						type="带宽"
					}else if(item.type=="4"){
						type="衰减"
					}
					return type;
				}
				protected function basepage1_PAGE_SHOWHandler(event:Event):void
				{
					// TODO Auto-generated method stub
//					headend.headend.setDataProviderNew();
				}
				
				
     ]]>	
	</fx:Script>
	<s:VGroup width="100%" height="100%">
	<s:VGroup  left="9" right="9" horizontalAlign="left" verticalAlign="middle" width="100%" height="100%">
		<s:VGroup height="80" top="12"   id="grid" width="100%"  verticalAlign="middle">
			
			<s:HGroup height="38" width="100%" verticalAlign="middle">
				<s:Spacer width="16"/>
				<!--s:Label text="站点代码："/>
				
				<global:HeadendList id="station" change="{getEquByCode(this.station.selectedItem.code)}" height="30" width="200"/>
				<s:Spacer width="30"/>
				
				<s:Label text="接收机   ："/>
				
				<s:ComboBox id="Receiver"  dataProvider="{setArray}" requireSelection="true"  width="185"/-->	
				
				<global:HeadendListAll id="headend"  height="30" width="500"/>
				
				<s:Spacer width="30"/>
				
				<s:Label text="频      率："/>
				
				<s:TextInput id="Freq" textAlign="left" restrict="0-9" maxChars="6" focusOut="focusout(Freq)"/>
				<s:Label text="KHz/MHz"/>
				<s:Spacer width="30"/>
				<s:Label text="任务ID："/>
				
				<s:TextInput id="taskId" width="100" restrict="0-9"/>
			</s:HGroup>
			
			<s:HGroup height="38" width="100%"  verticalAlign="middle">
				<s:Spacer width="16"/>
				<s:RadioButton label="按时间段查询" groupName="TimeCheck" selected="true" click="TimeCheck(event)"/>
				<s:RadioButton label="按日期查询" groupName="TimeCheck" click="TimeCheck(event)"/>		
				<s:Spacer width="30"/>		
				<s:Label text="起始时间：" id="begintimelabel"/>
				<s:Spacer width="6"/>
				<timecomp:TimeNew id="Starttime_day" starttime="00:00:00" />
				<timecomp:TimeNew id="Starttime"  dateDisplay="date" visible="false" includeInLayout="false"/>
				<s:Spacer width="39" id="space1"/>	
				<s:Label text="结束时间：" id="endtimelabel"/>
				<s:Spacer width="6" id="space2"/>
				<timecomp:TimeNew id="Endtime_day" />
				<s:Spacer width="30"/>	
				<s:Button buttonMode="true" label="查询" click="searchdata()" styleName="ButtonBlack"/>
			</s:HGroup>
			
		</s:VGroup>
		
		<s:Group width="100%" height="100%" top="12" bottom="60">
			<s:DataGrid width="100%" height="100%" id="result" dataProvider="{listStat}" textAlign="center">
				<s:columns>
					<s:ArrayCollection>
						<s:GridColumn headerText="任务ID" dataField="task_id"/>
						<s:GridColumn width="180"  headerText="扫描时间" dataField="check_datetime"/>
						<s:GridColumn headerText="接收机标识符" dataField="equ_code" />
						<s:GridColumn headerText="频率(KHz/MHz)" dataField="frequency" />
						<s:GridColumn headerText="参数类型" dataField="type"  labelFunction="typeFuc" />
						<s:GridColumn headerText="最小值" dataField="value1" />
						<s:GridColumn headerText="最大值" dataField="value2"  />
						<s:GridColumn headerText="波段" dataField="band" labelFunction="bandFuc" />
						<s:GridColumn headerText="描述" dataField="description"/>
					</s:ArrayCollection>
				</s:columns>
			</s:DataGrid>
			<s:Label text="正在查询，请稍候..." color="0x000000" id="clew_label" y="{result.columnHeaderGroup.height+10}" width="100%" textAlign="center"  visible="false" includeInLayout="false" />				
		</s:Group>
		<!--分页组件所在地-->
		<flipBar:PageBar  id="pagebar" rowConutOfPage="25" totalPageQuery="10" height="20"/>
     </s:VGroup>
	</s:VGroup>
</system:BasePage>
