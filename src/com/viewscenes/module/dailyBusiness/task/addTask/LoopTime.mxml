<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:timecomp="com.viewscenes.utils.timecomp.*"
		 creationComplete="init()"
		 width="100%"
		 height="100%" xmlns:advancedComboBox="com.morcha4.ui.advancedComboBox.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.viewscenes.global.DataManager;
			import com.viewscenes.utils.StringTool;
			import com.viewscenes.utils.timecomp.DateUtil;

			import mx.collections.ArrayCollection;


			//根据组件应用的位置不同，通过该参数进行区分，然后进行相应的配置
			//GeneralTask:综合任务;SpectrumTask:频普任务
			public var task_type:String="GeneralTask";
			//是否设置默认值
			private var isDefalut:Boolean=true;
			public var myParent:Object=null;
			[Bindabel]
			public var isTempTask:Boolean=true; //true临时任务,false运行图任务

			public function set defaultValue(df:Boolean):void
			{
				isDefalut=df;
			}

			private function init():void
			{
				if (isDefalut)
					setDefaultValue(task_type);

//				if (task_type == "GeneralTask"){
//					expiredaysHBox.visible = true;
//					expiredaysHBox.includeInLayout = true;
//				}else{
//					expiredaysHBox.visible = false;
//					expiredaysHBox.includeInLayout = false;					
//				}					
			}

			private function delLoopTime():void
			{

				this.myParent.removeTaskChild("loop", this.id);
			}

			private function showTimeDistance(type:String):void
			{
				if (type == "1")
				{ //等待间隔后上报  按时间间隔上报
					timeHBox.visible=true;
					timeHBox.includeInLayout=true;
				}
				else
				{
					timeHBox.includeInLayout=false;
					timeHBox.visible=false;
				}
			}

			//设置初始化默认值
			//GeneralTask:综合任务;SpectrumTask:频普任务
			//根据不同的任务显示不同的页面内容
			private function setDefaultValue(task_type:String):void
			{

				var curTime:String=DateUtil.date2str(new Date(), "time");
				var hh:String=curTime.substr(0, 2);

				//开始时间

				_startTime.text=hh + ":30:00";
				//开始与结束间隔1小时
				var d:Date=new Date();
				d.hours=d.hours + 1;
				var nextTime:String=DateUtil.date2str(d, "time");
				var hh1:String=nextTime.substr(0, 2);
				//结束时间

				_endTime.text=hh1 + ":30:00";
				//有效天数
				_cycle_expiredays.text='30';

				//时间间隔

				_reportInterval.text="00:00:10";
//				if (task_type == "GeneralTask"){
//					expiredaysHBox.visible = true;
//					expiredaysHBox.includeInLayout = true;
//				}else{
//					expiredaysHBox.visible = false;
//					expiredaysHBox.includeInLayout = false;					
//				}

			}
		]]>
	</fx:Script>

	<s:HGroup width="100%"
			  horizontalAlign="left"
			  verticalAlign="middle"
			  paddingLeft="20">
		<s:Label text="循环时间："/>
		<advancedComboBox:DropDownListSet id="_dayOfweek"
						dataProvider="{DataManager.dayofweekColl}"
						selectedIndex="0"
						width="80">

		</advancedComboBox:DropDownListSet>
		<s:Spacer width="26"/>
		<advancedComboBox:DropDownListSet id="_reportMode"
						visible="false"
						includeInLayout="false"
						width="130"
						change="showTimeDistance(_reportMode.selectedItem.data);"
						dataProvider="{DataManager.upTypeColl}"
						selectedIndex="1"/>
		<!--s:Spacer width="26"/-->
		<s:HGroup id="timeHBox"
				  includeInLayout="false"
				  visible="false"
				  horizontalAlign="left"
				  verticalAlign="middle"
				  paddingRight="46">
			<s:Label text="时间间隔(秒)："/>
			<timecomp:TimeNew id="_reportInterval"
							  dateDisplay="time"/>
		</s:HGroup>

		<s:Spacer width="50"/>
		<s:Label text="开始时间："/>
		<timecomp:TimeNew id="_startTime"
						  dateDisplay="time"/>

		<s:Spacer width="36"/>
		<s:Label text="结束时间："/>
		<timecomp:TimeNew id="_endTime"
						  dateDisplay="time"/>

		<mx:Spacer width="26"/>
		<s:HGroup id="expiredaysHBox"
				  verticalAlign="middle">
			<s:Label text="有效天数："/>
			<s:TextInput width="40"
						 text="30"
						 id="_cycle_expiredays"
						 restrict="0-9"/>
		</s:HGroup>
		<s:Button buttonMode="true" label="删除"
				  id="deleteLoop"
				  click="delLoopTime();"
				  visible="{isTempTask}"/>
	</s:HGroup>
	<!--mx:HRule  strokeWidth="1" strokeColor="#a0a0a0" shadowColor="#000000" width="100%" /-->
</s:Group>
